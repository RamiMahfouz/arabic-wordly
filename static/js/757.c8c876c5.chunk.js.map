{"version":3,"file":"static/js/757.c8c876c5.chunk.js","mappings":"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","sources":["components/alerts/Alert.tsx","game.config.ts","lib/statuses.ts","constants/wordlist.ts","lib/words.ts","components/grid/CompletedRow.tsx","components/grid/CurrentRow.tsx","components/grid/EmptyRow.tsx","components/grid/Grid.tsx","components/keyboard/Key.tsx","components/keyboard/Keyboard.tsx","components/stats/StatBar.tsx","lib/share.ts","components/modals/StatsModal.tsx","lib/stats.ts","lib/localStorage.ts","components/dictionaries-types-tabs.tsx","assets/subscribe.svg","components/ads.tsx","game.tsx"],"sourcesContent":["import { Fragment } from 'react'\r\nimport { Transition } from '@headlessui/react'\r\nimport classNames from 'classnames'\r\n\r\ntype AlertProps = {\r\n    isOpen: boolean\r\n    message: string\r\n    variant?: 'success' | 'warning'\r\n}\r\n\r\nexport function Alert({ isOpen, message, variant = 'warning' }: AlertProps) {\r\n    const classes = classNames(\r\n        'fixed top-5 left-1/2 transform -translate-x-1/2 max-w-sm w-full shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden',\r\n        {\r\n            'bg-rose-200': variant === 'warning',\r\n            'bg-blue-200 z-20': variant === 'success',\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Transition\r\n            show={isOpen}\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300 transition\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"transition ease-in duration-100\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n        >\r\n            <div className={classes}>\r\n                <div className=\"p-4\">\r\n                    <p className=\"text-sm text-center font-medium text-gray-900\">\r\n                        {message}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Transition>\r\n    )\r\n}\r\n","export const CONFIG = {\r\n  ALLOW_SYNONYMS_LETTERS: false,\r\n}\r\n","\r\nexport type CharStatus = 'absent' | 'present' | 'correct' ;\r\n\r\nexport const CharValue = [\r\n    'ا', 'ب', 'ت', 'ة', 'ث', 'ج', 'ح',\r\n    'خ', 'د', 'ذ', 'ر', 'ز', 'س', 'ش',\r\n    'ص', 'ض', 'ط', 'ظ', 'ع', 'غ', 'ف',\r\n    'ق', 'ك', 'ل', 'م', 'ن', 'ه', 'و',\r\n    'ى', 'ي', 'ء', 'آ', 'أ', 'ؤ', 'إ',\r\n    'ئ', 'لا', 'لآ', 'لأ', 'لإ'\r\n] as const;\r\n\r\nexport const getStatuses = (\r\n    guesses: string[],\r\n    solution: string,\r\n): { [key: string]: CharStatus } => {\r\n    const charObj: { [key: string]: CharStatus } = {}\r\n\r\n    guesses.forEach((word) => {\r\n        word.split('').forEach((letter, i) => {\r\n            if (!solution.includes(letter)) {\r\n                // make status absent\r\n                return (charObj[letter] = 'absent')\r\n            }\r\n\r\n            if (letter === solution[i]) {\r\n                //make status correct\r\n                return (charObj[letter] = 'correct')\r\n            }\r\n\r\n            if (charObj[letter] !== 'correct') {\r\n                //make status present\r\n                return (charObj[letter] = 'present')\r\n            }\r\n        })\r\n    })\r\n\r\n    return charObj\r\n}\r\n\r\nexport const getGuessStatuses = (guess: string, solution: string): CharStatus[] => {\r\n\r\n    const splitSolution = solution.split('')\r\n    const splitGuess = guess.split('')\r\n\r\n    const solutionCharsTaken = splitSolution.map((_) => false)\r\n\r\n    const statuses: CharStatus[] = Array.from(Array(guess.length))\r\n\r\n    // handle all correct cases first\r\n    splitGuess.forEach((letter, i) => {\r\n        if (letter === splitSolution[i]) {\r\n            statuses[i] = 'correct'\r\n            solutionCharsTaken[i] = true\r\n            return\r\n        }\r\n    })\r\n\r\n    splitGuess.forEach((letter, i) => {\r\n        if (statuses[i]) return\r\n\r\n        if (!splitSolution.includes(letter)) {\r\n            // handles the absent case\r\n            statuses[i] = 'absent'\r\n            return\r\n        }\r\n\r\n        // now we are left with \"present\"s\r\n        const indexOfPresentChar = splitSolution.findIndex(\r\n            (x, index) => x === letter && !solutionCharsTaken[index]\r\n        )\r\n\r\n        if (indexOfPresentChar > -1) {\r\n            statuses[i] = 'present'\r\n            solutionCharsTaken[indexOfPresentChar] = true\r\n            return\r\n        } else {\r\n            statuses[i] = 'absent'\r\n            return\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return statuses\r\n}\r\n","import MAIN_DICTIONARY from './data/dictionary.json';\r\nimport DICTIONARY_NAMES from \"./data/noun_props.json\";\r\nimport DICIONARY_NOUNS from \"./data/nouns.json\";\r\nimport DICTIONARY_VERBS from \"./data/verbs.json\";\r\nimport DICTIONARY_ADJACTIVES from './data/adjs.json';\r\nimport DICTIONARY_MEANING from './data/meaning.json';\r\n\r\nexport type DICTIONARY_TYPES = 'main' | 'adjactives' | 'nouns' | 'names' | 'verbs'|'meaning';\r\n\r\nexport const getDictWords = (key: DICTIONARY_TYPES) => {\r\n    switch (key) {\r\n\r\n        case 'adjactives':\r\n            return DICTIONARY_ADJACTIVES.words;\r\n\r\n        case 'nouns':\r\n            return DICIONARY_NOUNS.words;\r\n\r\n        case 'names':\r\n            return DICTIONARY_NAMES.words;\r\n\r\n        case 'verbs':\r\n            return DICTIONARY_VERBS.words;\r\n\r\n        case 'meaning':\r\n            return DICTIONARY_MEANING.words;\r\n\r\n        default:\r\n            return MAIN_DICTIONARY.words;\r\n    }\r\n}\r\n","import { DICTIONARY_TYPES, getDictWords } from '../constants/wordlist'\r\nimport {CONFIG} from '../game.config';\r\n\r\n\r\nexport const LETTERS_SYNONYMS = [\r\n    [\"ا\", \"أ\", \"آ\", \"إ\", \"ٱ\"],\r\n    [\"ء\", \"ئ\", \"ؤ\"],\r\n    [\"ه\", \"ة\"],\r\n    [\"ي\", \"ى\"],\r\n    [\"و\", \"ؤ\"],\r\n]\r\n\r\n\r\n\r\nexport function genereateSynonymsOfWord(word: string): string[] {\r\n    if (!CONFIG.ALLOW_SYNONYMS_LETTERS)\r\n        return [];\r\n    else {\r\n        let result = [];\r\n        for (const synonymGroup of LETTERS_SYNONYMS) {\r\n\r\n            for (let synonymLetterIndex = 0; synonymLetterIndex < synonymGroup.length; synonymLetterIndex++) {\r\n\r\n                let currentSynonymLetter = synonymGroup[synonymLetterIndex];\r\n                let synonymsOfLetter = synonymGroup.filter((_, i) => i !== synonymLetterIndex);\r\n\r\n\r\n                // currentSynonymLetter can exist in multiple locations\r\n                let letterLocations =\r\n                    word\r\n                        .slice()\r\n                        .split('')\r\n                        .map((_l, index) => _l === currentSynonymLetter ? index : -1)\r\n                        .filter(x => x >= 0);\r\n\r\n                // try all locations\r\n                for (let letterLocation of letterLocations) {\r\n\r\n                    // try synonyms of letter for each letter location\r\n                    for (let synonymLetter of synonymsOfLetter) {\r\n\r\n                        let newWord = word\r\n                            .slice()\r\n                            .split('')\r\n                            .map((originalLetter, i) => i === letterLocation ? synonymLetter : originalLetter)\r\n                            .join(\"\");\r\n\r\n                        result.push(newWord);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const isWordInWordList = async (word: string, guesses: string[]) => {\r\n\r\n    // same word input repeated\r\n    if (guesses.includes(word))\r\n        return false;\r\n\r\n    let dictionary = getDictWords('main');\r\n    let meaningDictionary = getDictWords('meaning');\r\n    let exist = dictionary.concat(meaningDictionary).includes(word)\r\n    if (exist)\r\n        return true;\r\n    else {\r\n\r\n        let synonyms = genereateSynonymsOfWord(word);\r\n        //console.log({ synonyms });\r\n        for (let synonymWord of synonyms) {\r\n            if (dictionary.includes(synonymWord))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const isWinningWord = (word: string, solution: string) => {\r\n\r\n\r\n    return solution === word\r\n}\r\n\r\nexport function getWordOfDay(dictType: DICTIONARY_TYPES) {\r\n    // January 1, 2022 Game Epoch\r\n    const epochMs = new Date('January 1, 2022 00:00:00').valueOf()\r\n    const now = Date.now()\r\n    const msInDay = 86400000\r\n    const index = Math.floor((now - epochMs) / msInDay)\r\n    const nextday = (index + 1) * msInDay + epochMs\r\n\r\n    const dictionary = getDictWords(dictType);\r\n\r\n    return {\r\n        solution: dictionary[index % dictionary.length].toUpperCase(),\r\n        solutionIndex: index,\r\n        tomorrow: nextday,\r\n    }\r\n}\r\n","import { CONFIG } from '../../game.config';\r\nimport { CharStatus, getGuessStatuses } from '../../lib/statuses'\r\nimport { LETTERS_SYNONYMS } from '../../lib/words';\r\nimport { Cell } from './Cell'\r\n\r\ntype CompletedRowProps = {\r\n    guess: string,\r\n    solution: string,\r\n}\r\n\r\n\r\nexport function updateStatusesAccordingToSynonyms(_statuses: CharStatus[], guess: string, solution: string) {\r\n\r\n    //let statuses = _statuses.slice();\r\n    // we don't accept synonyms letters anymore\r\n    let acceptedSynonyms = Array(guess.length).fill(0);\r\n\r\n\r\n    if (!CONFIG.ALLOW_SYNONYMS_LETTERS)\r\n        return { statuses: _statuses, acceptedSynonyms };\r\n    else {\r\n        for (const synonymGroup of LETTERS_SYNONYMS) {\r\n\r\n            for (let synonymLetterIndex = 0; synonymLetterIndex < synonymGroup.length; synonymLetterIndex++) {\r\n\r\n                let currentSynonymLetter = synonymGroup[synonymLetterIndex];\r\n                let synonymsOfLetter = synonymGroup.filter((_, i) => i !== synonymLetterIndex);\r\n\r\n\r\n                // one letter can exist in multiple locations\r\n                let letterLocations =\r\n                    guess\r\n                        .slice()\r\n                        .split('')\r\n                        .map((_l, index) => _l === currentSynonymLetter ? index : -1)\r\n                        .filter(x => x >= 0);\r\n\r\n\r\n                // try all locations\r\n                for (let letterLocation of letterLocations) {\r\n                    if (_statuses[letterLocation] === 'absent') {\r\n                        // try synonyms of letter for each letter location\r\n                        for (let synonymLetter of synonymsOfLetter) {\r\n\r\n                            let newWord = guess\r\n                                .slice()\r\n                                .split('')\r\n                                .map((originalLetter, i) => i === letterLocation ? synonymLetter : originalLetter)\r\n                                .join(\"\");\r\n\r\n                            if (newWord[letterLocation] === solution[letterLocation]) {\r\n                                _statuses[letterLocation] = 'correct';\r\n                                //acceptedSynonyms[letterLocation] = newWord[letterLocation];\r\n                            }\r\n                            else {\r\n                                let existInAnotherPlace = solution.slice().split('').some(_letter => _letter === synonymLetter);\r\n                                if (existInAnotherPlace) {\r\n                                    _statuses[letterLocation] = 'present';\r\n                                    //acceptedSynonyms[letterLocation] = newWord[letterLocation];\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n        return { statuses: _statuses, acceptedSynonyms };\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function CompletedRow({ guess, solution }: CompletedRowProps) {\r\n\r\n    const _statuses = getGuessStatuses(guess, solution)\r\n\r\n    const {\r\n        statuses,\r\n        //acceptedSynonyms,\r\n    } = updateStatusesAccordingToSynonyms(_statuses, guess, solution);\r\n\r\n    return (\r\n        <div className=\"flex justify-center mb-1\">\r\n            {guess.split('').map((letter, i) => (\r\n                <Cell\r\n                    key={i}\r\n                    value={\r\n                        letter\r\n                        /*(statuses[i] === 'present' || statuses[i] === 'correct') && acceptedSynonyms[i] !== 0 ?\r\n                            acceptedSynonyms[i]\r\n                            :\r\n                            letter*/\r\n                    }\r\n                    status={statuses[i]}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import { Cell } from './Cell'\r\n\r\ntype CurrentRowProps = {\r\n  guess: string\r\n}\r\n\r\nexport function CurrentRow ({ guess }: CurrentRowProps) {\r\n\r\n  let _guess=  guess.slice(0,5);\r\n  const splitGuess = _guess.split('')\r\n  const emptyCells = Array.from(Array(5 - splitGuess.length))\r\n\r\n  return (\r\n    <div className=\"flex justify-center mb-1\">\r\n      {splitGuess.map((letter, i) => (\r\n        <Cell key={i} value={letter} />\r\n      ))}\r\n      {emptyCells.map((_, i) => (\r\n        <Cell key={i} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { Cell } from './Cell'\r\n\r\nexport function EmptyRow () {\r\n  const emptyCells = Array.from(Array(5))\r\n\r\n  return (\r\n    <div className=\"flex justify-center mb-1\">\r\n      {emptyCells.map((_, i) => (\r\n        <Cell key={i} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { CompletedRow } from './CompletedRow'\r\nimport { CurrentRow } from './CurrentRow'\r\nimport { EmptyRow } from './EmptyRow'\r\n\r\ntype GridProps = {\r\n    guesses: string[]\r\n    currentGuess: string,\r\n    solution: string,\r\n}\r\n\r\nexport function Grid ({ guesses, currentGuess, solution }: GridProps){\r\n    const empties =\r\n        guesses.length < 5 ? Array.from(Array(5 - guesses.length)) : []\r\n\r\n    return (\r\n        <div className=\"pb-2\" dir=\"rtl\">\r\n            {guesses.map((guess, i) => (\r\n                <CompletedRow key={i} guess={guess} solution={solution} />\r\n            ))}\r\n            {guesses.length < 6 && <CurrentRow guess={currentGuess} />}\r\n            {empties.map((_, i) => (\r\n                <EmptyRow key={i} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import { Fragment, ReactNode, useCallback, useRef, useState } from 'react'\r\nimport classnames from 'classnames'\r\nimport { KeyValue } from '../../lib/keyboard'\r\nimport { CharStatus } from '../../lib/statuses'\r\nimport { Popover, Transition } from '@headlessui/react'\r\n\r\ntype Props = {\r\n    children?: ReactNode\r\n    value: KeyValue\r\n    width?: number\r\n    status?: CharStatus\r\n    onClick: (value: KeyValue) => void,\r\n    extraLetters?: KeyValue[],\r\n}\r\n\r\nexport const Key = ({\r\n    children,\r\n    status,\r\n    width = 40,\r\n    value,\r\n    onClick,\r\n    extraLetters\r\n}: Props) => {\r\n\r\n    const classes = classnames(\r\n        'flex items-center justify-center rounded  text-md font-bold cursor-pointer select-none dark:text-slate-100',\r\n        {\r\n            'bg-slate-200 dark:bg-slate-600 hover:bg-slate-300 active:bg-slate-400':\r\n                !status,\r\n            'bg-slate-400 text-slate-100': status === 'absent',\r\n            'bg-green-500 hover:bg-green-600 active:bg-green-700 text-slate-100':\r\n                status === 'correct',\r\n            'bg-orange-500 hover:bg-orange-600 active:bg-orange-700 dark:bg-orange-700 text-slate-100':\r\n                status === 'present',\r\n        }\r\n    )\r\n\r\n    const handleClick: React.MouseEventHandler<HTMLButtonElement> = (event) => {\r\n        onClick(value)\r\n        event.currentTarget.blur()\r\n    }\r\n\r\n\r\n    const popoverRef = useRef<any>();\r\n\r\n    const onLongPress = () => {\r\n\r\n        if (popoverRef && popoverRef.current) {\r\n            popoverRef.current.click();\r\n        }\r\n    };\r\n\r\n\r\n    const longPressEvent = useLongPress({ onLongPress, onClick: handleClick as any }, {\r\n        shouldPreventDefault: true,\r\n        delay: 900,\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"relative\"\r\n        >\r\n\r\n            <button\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n                className={classes}\r\n                {...longPressEvent}\r\n            >\r\n                {children || value}\r\n            </button>\r\n\r\n            <div\r\n                style={{ position: 'absolute', top: '-104px', left: 0, width: '100%' }}\r\n            >\r\n                {\r\n                    extraLetters?.length ?\r\n                        <Popover className=\"relative\">\r\n                            {({ open, close }) => (\r\n                                <>\r\n                                    <Popover.Button\r\n                                        ref={popoverRef}\r\n                                    >\r\n                                    </Popover.Button>\r\n                                    <Transition\r\n                                        as={Fragment}\r\n                                        enter=\"transition ease-out duration-200\"\r\n                                        enterFrom=\"opacity-0 translate-y-1\"\r\n                                        enterTo=\"opacity-100 translate-y-0\"\r\n                                        leave=\"transition ease-in duration-150\"\r\n                                        leaveFrom=\"opacity-100 translate-y-0\"\r\n                                        leaveTo=\"opacity-0 translate-y-1\"\r\n                                    >\r\n                                        <Popover.Panel\r\n                                            className=\"absolute z-10 max-w-sm px-4 mt-3 transform -translate-x-1/2 left-1/2 sm:px-0 \">\r\n                                            <div className=\"overflow-hidden rounded-lg ring-1 ring-black ring-opacity-5\">\r\n\r\n                                                <div className=\"flex bg-slate-400 px-1 py-1\">\r\n                                                    {\r\n                                                        extraLetters?.map(extraLetter => (\r\n                                                            <button\r\n                                                                key={extraLetter}\r\n                                                                style={{ width: `${width}px`, height: '58px', }}\r\n                                                                className={classes+' mx-1'}\r\n                                                                onClick={() => {\r\n                                                                    onClick(extraLetter);\r\n                                                                    close();\r\n                                                                }}\r\n                                                            >\r\n                                                                {extraLetter}\r\n                                                            </button>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        </Popover.Panel>\r\n                                    </Transition>\r\n                                </>\r\n                            )}\r\n                        </Popover>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction preventDefault(e: Event) {\r\n    if (!isTouchEvent(e)) return;\r\n\r\n    if (e.touches.length < 2 && e.preventDefault) {\r\n        e.preventDefault();\r\n    }\r\n};\r\n\r\nexport function isTouchEvent(e: Event): e is TouchEvent {\r\n    return e && \"touches\" in e;\r\n};\r\n\r\ninterface PressHandlers<T> {\r\n    onLongPress: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void,\r\n    onClick?: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void,\r\n}\r\n\r\ninterface Options {\r\n    delay?: number,\r\n    shouldPreventDefault?: boolean\r\n}\r\n\r\nexport default function useLongPress<T>(\r\n    { onLongPress, onClick }: PressHandlers<T>,\r\n    { delay = 300, shouldPreventDefault = true }\r\n        : Options\r\n        = {}\r\n) {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef<NodeJS.Timeout>();\r\n    const target = useRef<EventTarget>();\r\n\r\n    const start = useCallback(\r\n        (e: React.MouseEvent<T> | React.TouchEvent<T>) => {\r\n            e.persist();\r\n            const clonedEvent = { ...e };\r\n\r\n            if (shouldPreventDefault && e.target) {\r\n                e.target.addEventListener(\r\n                    \"touchend\",\r\n                    preventDefault,\r\n                    { passive: false }\r\n                );\r\n                target.current = e.target;\r\n            }\r\n\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(clonedEvent);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback((\r\n        e: React.MouseEvent<T> | React.TouchEvent<T>,\r\n        shouldTriggerClick = true\r\n    ) => {\r\n        timeout.current && clearTimeout(timeout.current);\r\n        shouldTriggerClick && !longPressTriggered && onClick?.(e);\r\n\r\n        setLongPressTriggered(false);\r\n\r\n        if (shouldPreventDefault && target.current) {\r\n            target.current.removeEventListener(\"touchend\", preventDefault);\r\n        }\r\n    },\r\n        [shouldPreventDefault, onClick, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: (e: React.MouseEvent<T>) => start(e),\r\n        onTouchStart: (e: React.TouchEvent<T>) => start(e),\r\n        onMouseUp: (e: React.MouseEvent<T>) => clear(e),\r\n        onMouseLeave: (e: React.MouseEvent<T>) => clear(e, false),\r\n        onTouchEnd: (e: React.TouchEvent<T>) => clear(e)\r\n    };\r\n};\r\n","import { KeyValue } from '../../lib/keyboard'\r\nimport { CharStatus, getGuessStatuses } from '../../lib/statuses'\r\nimport { Key } from './Key'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { ENTER_TEXT } from '../../constants/strings'\r\nimport { DICTIONARY_TYPES } from '../../constants/wordlist'\r\nimport { updateStatusesAccordingToSynonyms } from '../grid/CompletedRow'\r\nimport { MajarraButton } from '../button'\r\n\r\ntype KeyboardProps = {\r\n    onChar: (value: string) => void\r\n    onDelete: () => void\r\n    onEnter: () => void\r\n    guesses: string[],\r\n    solution: string,\r\n    dicType: DICTIONARY_TYPES\r\n}\r\n\r\nfunction generateKeyboardStatuses(\r\n    guesses: string[],\r\n    solution: string,\r\n): { [key: string]: CharStatus } {\r\n\r\n    let charsToStatusMap: { [key: string]: CharStatus } = {}\r\n\r\n    for (let guess of guesses) {\r\n        let { statuses } = updateStatusesAccordingToSynonyms(getGuessStatuses(guess, solution), guess, solution);\r\n        guess.slice().split('').forEach((letter, index) => {\r\n\r\n            charsToStatusMap[letter] = statuses[index];\r\n        })\r\n    }\r\n\r\n\r\n    return charsToStatusMap;\r\n}\r\n\r\nexport function Keyboard({ onChar, onDelete, onEnter, guesses, solution, dicType }: KeyboardProps) {\r\n\r\n    const charStatuses = generateKeyboardStatuses(guesses, solution)\r\n\r\n\r\n    const onClick = useCallback((value: KeyValue) => {\r\n        if (value === 'ENTER') {\r\n            onEnter()\r\n        } else if (value === 'DELETE') {\r\n            onDelete()\r\n        } else {\r\n            onChar(value)\r\n        }\r\n    }, [onEnter, onDelete, onChar]);\r\n\r\n\r\n\r\n    const listener = useCallback((e: KeyboardEvent) => {\r\n        if (e.code === 'Enter') {\r\n            onEnter()\r\n        } else if (e.code === 'Backspace') {\r\n            onDelete()\r\n        } else {\r\n            const key = e.key;\r\n            // arabic letters regular expression\r\n            if (key.length && (/^[\\u0621-\\u064A\\u0660-\\u0669 ]+$/g).test(key))\r\n                onChar(key);\r\n        }\r\n    }, [onChar, onDelete, onEnter,]);\r\n\r\n\r\n\r\n    useEffect(function eventsBinder() {\r\n        window.addEventListener('keyup', listener)\r\n        return function eventsUnbind() {\r\n            window.removeEventListener('keyup', listener)\r\n        }\r\n    }, [onChar, onDelete, onEnter, dicType, listener])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n            <div\r\n                className=\"keyboard-grid\"\r\n            >\r\n\r\n\r\n                <Key value=\"ج\" onClick={onClick} status={charStatuses['ج']} />\r\n                <Key value=\"ح\" onClick={onClick} status={charStatuses['ح']} />\r\n                <Key value=\"خ\" onClick={onClick} status={charStatuses['خ']} />\r\n                <Key value=\"ه\" onClick={onClick} status={charStatuses['ه']} />\r\n                <Key value=\"ع\" onClick={onClick} status={charStatuses['ع']} />\r\n                <Key value=\"غ\" onClick={onClick} status={charStatuses['غ']} />\r\n                <Key value=\"ف\" onClick={onClick} status={charStatuses['ف']} />\r\n                <Key value=\"ق\" onClick={onClick} status={charStatuses['ق']} />\r\n                <Key value=\"ث\" onClick={onClick} status={charStatuses['ث']} />\r\n                <Key value=\"ص\" onClick={onClick} status={charStatuses['ص']} />\r\n                <Key value=\"ض\" onClick={onClick} status={charStatuses['ض']} />\r\n\r\n\r\n                <Key value=\"ط\" onClick={onClick} status={charStatuses[\"ط\"]} />\r\n                <Key value=\"ك\" onClick={onClick} status={charStatuses[\"ك\"]} />\r\n                <Key value=\"م\" onClick={onClick} status={charStatuses[\"م\"]} />\r\n                <Key value=\"ن\" onClick={onClick} status={charStatuses[\"ن\"]} />\r\n                <Key value=\"ت\" onClick={onClick} status={charStatuses[\"ت\"]} />\r\n                <Key value=\"ا\" onClick={onClick} status={charStatuses[\"ا\"]} extraLetters={['أ', 'إ', 'آ', 'ء']} />\r\n                <Key value=\"ل\" onClick={onClick} status={charStatuses[\"ل\"]} extraLetters={['لا', 'لآ', 'لأ', 'لإ']} />\r\n                <Key value=\"ب\" onClick={onClick} status={charStatuses[\"ب\"]} />\r\n                <Key value=\"ي\" onClick={onClick} status={charStatuses[\"ي\"]} extraLetters={['ئ']} />\r\n                <Key value=\"س\" onClick={onClick} status={charStatuses[\"س\"]} />\r\n                <Key value=\"ش\" onClick={onClick} status={charStatuses[\"ش\"]} />\r\n\r\n                {/* delete key */}\r\n                <Key width={65} value=\"DELETE\" onClick={onClick}>\r\n                    <div className=\"rotate-180\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\" />\r\n                        </svg>\r\n                    </div>\r\n                </Key>\r\n\r\n                <Key value=\"د\" onClick={onClick} status={charStatuses['د']} />\r\n                <Key value=\"ظ\" onClick={onClick} status={charStatuses[\"ظ\"]} />\r\n                <Key value=\"ز\" onClick={onClick} status={charStatuses[\"ز\"]} />\r\n                <Key value=\"و\" onClick={onClick} status={charStatuses[\"و\"]} extraLetters={['ؤ']} />\r\n                <Key value=\"ة\" onClick={onClick} status={charStatuses[\"ة\"]} />\r\n                <Key value=\"ى\" onClick={onClick} status={charStatuses[\"ى\"]} extraLetters={['ئ']} />\r\n                <Key value=\"ر\" onClick={onClick} status={charStatuses[\"ر\"]} />\r\n                <Key value=\"ؤ\" onClick={onClick} status={charStatuses[\"ؤ\"]} />\r\n                <Key value=\"ء\" onClick={onClick} status={charStatuses[\"ء\"]} />\r\n                <Key value=\"ذ\" onClick={onClick} status={charStatuses[\"ذ\"]} />\r\n\r\n\r\n                <div\r\n                    className=\"col-span-11 mt-2 mb-3\"\r\n                >\r\n                    <MajarraButton\r\n                        className=\"h-[48px] font-bold\"\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        onClick={() => onClick(\"ENTER\")}\r\n                    >\r\n                        {ENTER_TEXT}\r\n                    </MajarraButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n","import { GameStats } from '../../lib/localStorage'\r\nimport {\r\n    TOTAL_TRIES_TEXT,\r\n    SUCCESS_RATE_TEXT,\r\n    CURRENT_STREAK_TEXT,\r\n    BEST_STREAK_TEXT,\r\n} from '../../constants/strings'\r\n\r\ntype StatsBarProps = {\r\n    gameStats: GameStats\r\n}\r\n\r\nfunction StatItem({\r\n    label,\r\n    value,\r\n}: {\r\n    label: string\r\n    value: string | number\r\n}) {\r\n    return (\r\n        <div className=\"items-center justify-center m-1 w-1/4 dark:text-white\">\r\n            <div className=\"text-3xl font-bold\">{value}</div>\r\n            <div className=\"text-xs\">{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function StatBar({ gameStats }: StatsBarProps) {\r\n    return (\r\n        <div className=\"flex justify-center my-2\">\r\n            <StatItem label={TOTAL_TRIES_TEXT} value={gameStats.totalGames} />\r\n            <StatItem label={SUCCESS_RATE_TEXT} value={`${gameStats.successRate}%`} />\r\n            <StatItem label={CURRENT_STREAK_TEXT} value={gameStats.currentStreak} />\r\n            <StatItem label={BEST_STREAK_TEXT} value={gameStats.bestStreak} />\r\n        </div>\r\n    )\r\n}\r\n","import { getGuessStatuses } from './statuses'\r\nimport { GAME_TITLE } from '../constants/strings'\r\n\r\nexport const shareStatus = (guesses: string[], lost: boolean, solutionIndex: number, solution: string) => {\r\n    //  navigator.clipboard.writeText\r\n\r\n    copyTextToClipboard(\r\n        `${GAME_TITLE} ${solutionIndex} ${lost ? 'X' : guesses.length}/6\\n\\n` +\r\n        generateEmojiGrid(guesses, solution)\r\n        + `\\n مجرّة | https://kalimat.majarra.com`\r\n    )\r\n}\r\n\r\nexport const generateEmojiGrid = (guesses: string[], solution: string) => {\r\n    return guesses\r\n        .map((guess) => {\r\n            const status = getGuessStatuses(guess, solution)\r\n            return guess\r\n                .split('')\r\n                .map((letter, i) => {\r\n                    switch (status[i]) {\r\n                        case 'correct':\r\n                            return '🟩'\r\n                        case 'present':\r\n                            return '🟨'\r\n                        default:\r\n                            return '⬜'\r\n                    }\r\n                })\r\n                .join('')\r\n        })\r\n        .join('\\n')\r\n}\r\n\r\nfunction fallbackCopyTextToClipboard(text: string) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n        var msg = successful ? 'successful' : 'unsuccessful';\r\n        console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\nfunction copyTextToClipboard(text: string) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function() {\r\n        console.log('Async: Copying to clipboard was successful!');\r\n    }, function(err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import Countdown from 'react-countdown'\r\nimport { StatBar } from '../stats/StatBar'\r\n//import { Histogram } from '../stats/Histogram'\r\nimport { GameStats } from '../../lib/localStorage'\r\nimport { shareStatus } from '../../lib/share'\r\nimport { BaseModal } from './BaseModal'\r\nimport {\r\n    STATISTICS_TITLE,\r\n    //GUESS_DISTRIBUTION_TEXT,\r\n    NEW_WORD_TEXT,\r\n    SHARE_TEXT,\r\n} from '../../constants/strings'\r\nimport { useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../root'\r\nimport { closeDialog } from '../../store/actions/dialogs'\r\n\r\ntype StatsModalProps = {\r\n    guesses: string[]\r\n    gameStats: GameStats\r\n    isGameLost: boolean\r\n    isGameWon: boolean\r\n    handleShare: () => void,\r\n    tomorrow: number,\r\n    solutionIndex: number,\r\n    solution: string,\r\n}\r\n\r\nexport function StatsModal({\r\n    guesses,\r\n    gameStats,\r\n    isGameLost,\r\n    isGameWon,\r\n    handleShare,\r\n    tomorrow,\r\n    solution,\r\n    solutionIndex,\r\n}: StatsModalProps) {\r\n\r\n\r\n    const isOpen = useSelector((state: RootState) => state.dialogs.stats);\r\n    const dispatch = useDispatch();\r\n    const handleClose = useCallback(() => dispatch(closeDialog({ dialogName: 'stats' })), []);\r\n\r\n\r\n    if (gameStats.totalGames <= 0) {\r\n        return (\r\n            <BaseModal\r\n                title={STATISTICS_TITLE}\r\n                isOpen={isOpen}\r\n                handleClose={handleClose}\r\n            >\r\n                <StatBar gameStats={gameStats} />\r\n            </BaseModal>\r\n        )\r\n    }\r\n    return (\r\n        <BaseModal\r\n            title={STATISTICS_TITLE}\r\n            isOpen={isOpen}\r\n            handleClose={handleClose}\r\n        >\r\n            <StatBar gameStats={gameStats} />\r\n\r\n            {/*\r\n            <h4 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-gray-100\">\r\n                {GUESS_DISTRIBUTION_TEXT}\r\n            </h4>\r\n\r\n            <Histogram gameStats={gameStats} />\r\n            */}\r\n            {(isGameLost || isGameWon) && (\r\n                <div className=\"mt-5 sm:mt-6 columns-2 dark:text-white\">\r\n                    <div>\r\n                        <h5>{NEW_WORD_TEXT}</h5>\r\n                        <Countdown\r\n                            className=\"text-lg font-medium text-gray-900 dark:text-gray-100\"\r\n                            date={tomorrow}\r\n                            daysInHours={true}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"mt-2 w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\"\r\n                        onClick={() => {\r\n                            shareStatus(guesses, isGameLost, solutionIndex, solution)\r\n                            handleShare()\r\n                        }}\r\n                    >\r\n                        {SHARE_TEXT}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </BaseModal>\r\n    )\r\n}\r\n","import { DICTIONARY_TYPES } from '../constants/wordlist'\r\nimport {\r\n    GameStats,\r\n    loadStatsFromLocalStorage,\r\n    saveStatsToLocalStorage,\r\n} from './localStorage'\r\n\r\n// In stats array elements 0-5 are successes in 1-6 trys\r\n\r\nexport function addStatsForCompletedGame(\r\n    gameStats: GameStats,\r\n    count: number,\r\n    key: DICTIONARY_TYPES\r\n) {\r\n    // Count is number of incorrect guesses before end.\r\n    const stats = { ...gameStats }\r\n\r\n    stats.totalGames += 1\r\n\r\n    if (count > 5) {\r\n        // A fail situation\r\n        stats.currentStreak = 0\r\n        stats.gamesFailed += 1\r\n    } else {\r\n        stats.winDistribution[count] += 1\r\n        stats.currentStreak += 1\r\n\r\n        if (stats.bestStreak < stats.currentStreak) {\r\n            stats.bestStreak = stats.currentStreak\r\n        }\r\n    }\r\n\r\n    stats.successRate = getSuccessRate(stats)\r\n\r\n    saveStatsToLocalStorage(key, stats)\r\n    return stats\r\n}\r\n\r\nexport const defaultStats: GameStats = {\r\n    winDistribution: [0, 0, 0, 0, 0, 0],\r\n    gamesFailed: 0,\r\n    currentStreak: 0,\r\n    bestStreak: 0,\r\n    totalGames: 0,\r\n    successRate: 0,\r\n}\r\n\r\nexport function loadStats(key: DICTIONARY_TYPES) {\r\n    return loadStatsFromLocalStorage(key) || defaultStats\r\n}\r\n\r\nfunction getSuccessRate(gameStats: GameStats) {\r\n    const { totalGames, gamesFailed } = gameStats\r\n\r\n    return Math.round(\r\n        (100 * (totalGames - gamesFailed)) / Math.max(totalGames, 1)\r\n    )\r\n}\r\n","import { DICTIONARY_TYPES } from \"../constants/wordlist\"\r\n\r\n\r\ntype StoredGameState = {\r\n    guesses: string[]\r\n    solution: string\r\n}\r\n\r\nexport function saveGameSolutionAndGuessesToLocalStorage(dictType: DICTIONARY_TYPES, gameState: StoredGameState) {\r\n    localStorage.setItem(dictType + '_state', JSON.stringify(gameState))\r\n}\r\n\r\nexport function loadGameSolutionAndGuessesFromLocalStorage(dictType: DICTIONARY_TYPES) {\r\n    const state = localStorage.getItem(dictType + '_state')\r\n    return state ? (JSON.parse(state) as StoredGameState) : null\r\n}\r\n\r\n\r\nexport type GameStats = {\r\n    winDistribution: number[]\r\n    gamesFailed: number\r\n    currentStreak: number\r\n    bestStreak: number\r\n    totalGames: number\r\n    successRate: number\r\n}\r\n\r\nexport const saveStatsToLocalStorage = (key: DICTIONARY_TYPES, gameStats: GameStats) => {\r\n    localStorage.setItem(key + '_stats', JSON.stringify(gameStats))\r\n}\r\n\r\nexport const loadStatsFromLocalStorage = (key: DICTIONARY_TYPES) => {\r\n    const stats = localStorage.getItem(key + '_stats')\r\n    return stats ? (JSON.parse(stats) as GameStats) : null\r\n}\r\n","import classnames from 'classnames'\r\nimport { Tab } from '@headlessui/react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n    DocumentTextIcon,\r\n} from '@heroicons/react/outline'\r\nimport { dictionaryTypeTranslater } from '../constants/strings'\r\n\r\n\r\n\r\n\r\nexport function ChangeDictionaryTabs() {\r\n    return (\r\n        <div className=\"hidden flex justify-center items-center my-4 md:flex\">\r\n\r\n            <DocumentTextIcon className=\"ml-2 h-7 w-7\" />\r\n\r\n            <h1 className=\"text-xl font-bold\">{'نوع الكلمات'}</h1>\r\n\r\n            <Tab.Group>\r\n                <Tab.List className=\"box-border mx-10 flex items-center \">\r\n                    {['main', 'adjactives', 'nouns', 'names', 'verbs'].map((_type) => (\r\n                        <NavLink\r\n                            to={`/${_type === 'main' ? '' : _type}`}\r\n                            key={_type}\r\n                            className={({ isActive }) =>\r\n                                classnames('text-[#777] border-b-2 border-slate-200', {\r\n                                    'text-[#5a13a0] border-b-2 border-[#5a13a0]': isActive,\r\n                                })\r\n                            }\r\n                        >\r\n                            {({ isActive }) => (\r\n                                <Tab\r\n                                    className={classnames('px-3', {\r\n                                        'text-[#5a13a0]': isActive,\r\n                                    })}\r\n                                    style={{ whiteSpace: 'nowrap' }}\r\n                                >\r\n                                    <p className=\"py-2\">\r\n                                        {dictionaryTypeTranslater(_type as any)}\r\n                                    </p>\r\n                                </Tab>\r\n                            )}\r\n                        </NavLink>\r\n                    ))}\r\n                </Tab.List>\r\n            </Tab.Group>\r\n        </div>\r\n    )\r\n}\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _g, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _g2, _path52, _path53, _g3, _g4, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _g5, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _g6, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubscribe(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 156,\n    height: 95,\n    viewBox: \"0 0 156 95\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.145 55.6014L132.055 67.7084L150.017 75.2594L155.107 63.1524L137.145 55.6014Z\",\n    fill: \"#EBEBEB\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.096 63.3265C155.02 63.3615 154.941 63.3915 154.86 63.4155L154.176 63.6515L151.648 64.4585L143.272 67.0595L143.204 67.0805L143.169 67.0174L143.086 66.8635L138.838 59.0405C138.312 58.0465 137.88 57.2395 137.573 56.6585C137.434 56.3875 137.32 56.1725 137.235 56.0075C137.193 55.9325 137.158 55.8535 137.129 55.7715C137.183 55.8395 137.23 55.9115 137.269 55.9885L137.634 56.6235C137.953 57.1975 138.399 57.9975 138.949 58.9835C140.051 60.9945 141.561 63.7435 143.23 66.7715L143.312 66.9275L143.209 66.8845L151.617 64.3455L154.164 63.5905L154.858 63.3945C154.935 63.3635 155.014 63.3405 155.096 63.3265Z\",\n    fill: \"#E0E0E0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.053 67.8854C132.029 67.8434 134.078 66.7504 136.627 65.4474C139.175 64.1444 141.259 63.1224 141.283 63.1674C141.307 63.2124 139.256 64.3024 136.707 65.6054C134.158 66.9084 132.074 67.9254 132.053 67.8854Z\",\n    fill: \"#E0E0E0\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.308 65.5254C147.355 65.5134 147.999 67.7204 148.743 70.4574C149.486 73.1954 150.053 75.4134 150.005 75.4374C149.958 75.4614 149.316 73.2424 148.573 70.5054C147.83 67.7674 147.27 65.5254 147.308 65.5254Z\",\n    fill: \"#E0E0E0\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.9874 77.7065L18.2031 86.7094L31.5608 92.3244L35.3458 83.3214L21.9874 77.7065Z\",\n    fill: \"#F5F5F5\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.3428 83.4614C35.2868 83.4904 35.2278 83.5134 35.1678 83.5294L34.6598 83.6974L32.7718 84.2995L26.5395 86.2394L26.4876 86.2554L26.4616 86.2085C26.4428 86.1705 26.4215 86.1335 26.3979 86.0925L23.2497 80.2755L22.3057 78.5034L22.0555 78.0195C22.0243 77.9645 21.9974 77.9064 21.9753 77.8474C22.0157 77.8964 22.0505 77.9504 22.0791 78.0074L22.3505 78.4794C22.5865 78.9044 22.9216 79.4995 23.3276 80.2305L26.5112 86.0294C26.5324 86.0694 26.5537 86.1095 26.5749 86.1445L26.497 86.1144L32.7418 84.2124L34.6298 83.6505L35.1468 83.5044C35.2098 83.4824 35.2758 83.4684 35.3428 83.4614Z\",\n    fill: \"#E0E0E0\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.2015 86.8385C18.185 86.8055 19.7072 85.9935 21.6023 85.0235C23.4974 84.0535 25.0597 83.2965 25.0597 83.3295C25.0597 83.3625 23.554 84.1715 21.6589 85.1415C19.7639 86.1115 18.2157 86.8695 18.2015 86.8385Z\",\n    fill: \"#E0E0E0\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.5439 85.0825C29.5769 85.0825 30.0559 86.7155 30.6079 88.7505C31.1609 90.7845 31.5829 92.4435 31.5519 92.4535C31.5219 92.4625 31.0379 90.8195 30.4859 88.7855C29.9329 86.7515 29.5179 85.0925 29.5439 85.0825Z\",\n    fill: \"#E0E0E0\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.8427 48.1575L0 54.4365L6.0755 69.7655L21.9182 63.4865L15.8427 48.1575Z\",\n    fill: \"#F5F5F5\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.77917 67.9654L8.03707 58.3414L13.6209 61.9614L14.7372 58.4214L20.1675 62.6624L6.77917 67.9654Z\",\n    fill: \"#E0E0E0\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5518 54.7824C12.6411 55.0084 12.6616 55.2554 12.6105 55.4924C12.5594 55.7304 12.4392 55.9464 12.2649 56.1154C12.0906 56.2844 11.8701 56.3984 11.6314 56.4414C11.3926 56.4854 11.1463 56.4574 10.9235 56.3604C10.7008 56.2644 10.5116 56.1044 10.3799 55.9004C10.2482 55.6964 10.18 55.4584 10.1837 55.2154C10.1875 54.9724 10.2632 54.7364 10.4011 54.5364C10.5391 54.3374 10.7331 54.1824 10.9588 54.0934C11.1086 54.0334 11.2687 54.0044 11.43 54.0064C11.5912 54.0094 11.7504 54.0434 11.8984 54.1074C12.0464 54.1714 12.1803 54.2634 12.2925 54.3794C12.4046 54.4954 12.4927 54.6324 12.5518 54.7824Z\",\n    fill: \"#E0E0E0\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M20.184 62.7054C20.1729 62.6854 20.1634 62.6654 20.1557 62.6434C20.1368 62.5964 20.1109 62.5404 20.0802 62.4664L19.7993 61.7775C19.5633 61.1735 19.2023 60.2954 18.7515 59.1814C17.8571 56.9464 16.5803 53.7534 15.051 49.9404L15.1407 49.9804L1.75951 55.2944C1.74771 55.3184 1.84451 55.0964 1.80431 55.1914V55.2024V55.2164V55.2424L1.82561 55.2974L1.86811 55.4084L1.95541 55.6255L2.12771 56.0614C2.24331 56.3494 2.36371 56.6404 2.46991 56.9254L3.14721 58.6344L4.45461 61.9384L6.84061 67.9845L6.75091 67.9464L16.4411 64.1445L19.1787 63.0784L19.9055 62.7995L20.0943 62.7285C20.1165 62.7195 20.1394 62.7124 20.1628 62.7074L20.1061 62.7334L19.9268 62.8094L19.2188 63.0994L16.5095 64.1924L6.82411 68.0744L6.75801 68.1024L6.73201 68.0365C5.98861 66.1695 5.18151 64.1404 4.32951 61.9944C3.90321 60.9214 3.46581 59.8204 3.01741 58.6904C2.79551 58.1264 2.56901 57.5585 2.34241 56.9845C2.22681 56.6965 2.10641 56.4084 1.99791 56.1184L1.82561 55.6814L1.73831 55.4644L1.69581 55.3564L1.67451 55.2994V55.2734V55.2594C1.63441 55.3514 1.72881 55.1274 1.72171 55.1504L15.11 49.8574L15.1761 49.8315L15.2021 49.8954L18.853 59.2054L19.8607 61.8015L20.1227 62.4814C20.1486 62.5544 20.1699 62.6104 20.1864 62.6534C20.1873 62.6704 20.1865 62.6884 20.184 62.7054Z\",\n    fill: \"#E0E0E0\"\n  }))), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M106.605 90.1165L105.748 89.4985C105.262 89.1465 104.919 88.6295 104.783 88.0445L104.179 85.4485C103.985 84.6335 103.507 83.9135 102.83 83.4195C102.153 82.9255 101.321 82.6895 100.486 82.7535L100.25 81.7485C100.236 81.6875 100.21 81.6305 100.174 81.5795C100.138 81.5285 100.092 81.4855 100.039 81.4525C99.9859 81.4195 99.9269 81.3975 99.8659 81.3875C99.8039 81.3775 99.7409 81.3795 99.6809 81.3945C99.6199 81.4075 99.5629 81.4335 99.5119 81.4695C99.4609 81.5065 99.4179 81.5515 99.3849 81.6045C99.3529 81.6575 99.3299 81.7165 99.3199 81.7775C99.3099 81.8395 99.3119 81.9025 99.3269 81.9625L99.5629 82.9495C98.7519 83.2405 98.0759 83.8205 97.6639 84.5775C97.2519 85.3345 97.1319 86.2165 97.3279 87.0555L97.9059 89.5475C98.0339 90.0915 97.9749 90.6615 97.7389 91.1665L97.2029 92.3165L100.689 91.4855C100.823 91.6875 101.005 91.8535 101.218 91.9685C101.432 92.0835 101.67 92.1445 101.913 92.1465C102.155 92.1485 102.394 92.0905 102.609 91.9775C102.824 91.8655 103.008 91.7025 103.145 91.5015C103.273 91.3095 103.354 91.0895 103.381 90.8605L106.605 90.1165Z\",\n    fill: \"#EBEBEB\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.63 19.2906L123.729 29.1554L117.367 39.6504L101.902 29.1767L108.63 19.2906Z\",\n    fill: \"#F5F5F5\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.63 19.2906L119.561 18.2569C119.786 18.2355 120.011 18.2922 120.198 18.4173C120.386 18.5424 120.524 18.7283 120.59 18.9437L123.729 29.1554\",\n    fill: \"#5A13A0\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.63 19.2906L119.561 18.2569C119.786 18.2355 120.011 18.2922 120.198 18.4173C120.386 18.5424 120.524 18.7283 120.59 18.9437L123.729 29.1554\",\n    fill: \"#E0E0E0\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M101.902 29.1814C101.902 29.1507 103.969 28.6362 106.537 28.0321C109.104 27.4279 111.2 26.9559 111.2 26.9866C111.2 27.0173 109.133 27.5294 106.567 28.1359C104.002 28.7424 101.909 29.2073 101.902 29.1814Z\",\n    fill: \"#E0E0E0\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M117.367 39.6504C117.336 39.6504 117.017 37.5904 116.659 35.0384C116.3 32.4877 116.031 30.4156 116.062 30.4133C116.092 30.4109 116.409 32.4712 116.77 35.0244C117.131 37.5784 117.397 39.6454 117.367 39.6504Z\",\n    fill: \"#E0E0E0\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.63 19.2906L112.182 30.1749L123.729 29.1554L108.63 19.2906Z\",\n    fill: \"#E0E0E0\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.017 20.3502L112.109 15.642L125.369 24.2206L122.24 29.2569L112.234 30.0947L109.017 20.3502Z\",\n    fill: \"#FAFAFA\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.017 20.3502C109.017 20.3502 109.041 20.4116 109.081 20.5272L109.26 21.0417C109.413 21.4995 109.635 22.1603 109.921 23.0052C110.487 24.7021 111.299 27.1329 112.281 30.0852L112.229 30.0498L122.235 29.2002L122.188 29.2285L124.048 26.2337C124.477 25.5446 124.901 24.8641 125.318 24.1923L125.336 24.2773L112.087 15.6798H112.142L109.852 19.1301C109.586 19.5289 109.38 19.8381 109.236 20.0505L109.074 20.2865C109.038 20.3408 109.017 20.3667 109.017 20.3667C109.017 20.3667 109.031 20.3384 109.064 20.2841C109.097 20.2299 109.149 20.1473 109.215 20.0481L109.81 19.1207L112.076 15.6397L112.097 15.6066L112.13 15.6279L125.402 24.1876L125.452 24.2206L125.421 24.2725L124.152 26.3139L122.292 29.2899L122.275 29.3159H122.245L112.238 30.1442H112.198L112.186 30.1065L109.864 23.0005C109.59 22.1556 109.376 21.4925 109.229 21.0346L109.067 20.5201C109.031 20.4092 109.017 20.3502 109.017 20.3502Z\",\n    fill: \"#E0E0E0\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.721 25.2025C121.702 25.2308 119.668 23.9304 117.175 22.2973C114.683 20.6642 112.677 19.319 112.691 19.2907C112.706 19.2624 114.745 20.5627 117.237 22.1958C119.729 23.829 121.74 25.1694 121.721 25.2025Z\",\n    fill: \"#E0E0E0\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.841 26.5288C120.822 26.5571 118.787 25.2567 116.295 23.6236C113.803 21.9905 111.797 20.6453 111.811 20.617C111.825 20.5886 113.864 21.889 116.359 23.5221C118.853 25.1553 120.859 26.5004 120.841 26.5288Z\",\n    fill: \"#E0E0E0\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M119.826 28.0556C119.809 28.0839 117.773 26.7836 115.28 25.1528C112.788 23.5221 110.782 22.1721 110.796 22.1438C110.811 22.1155 112.852 23.4159 115.344 25.049C117.836 26.6821 119.845 28.0273 119.826 28.0556Z\",\n    fill: \"#E0E0E0\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.813 29.5849C118.794 29.6132 116.852 28.3742 114.473 26.8166C112.094 25.259 110.183 23.9846 110.202 23.9445C110.221 23.9044 112.163 25.1552 114.542 26.7128C116.921 28.2704 118.832 29.5566 118.813 29.5849Z\",\n    fill: \"#E0E0E0\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M116.239 29.8092C116.162 29.7793 116.089 29.7405 116.021 29.6935L115.448 29.3466L113.591 28.1666C112.866 27.6946 112.217 27.2722 111.75 26.9559C111.514 26.7978 111.33 26.6657 111.202 26.5736C111.132 26.531 111.068 26.4794 111.011 26.4202C111.088 26.4479 111.161 26.486 111.228 26.5335L111.797 26.8828L113.657 28.0628C114.381 28.5348 115.03 28.9549 115.495 29.2735C115.731 29.4316 115.915 29.5614 116.043 29.6558C116.114 29.6981 116.18 29.7496 116.239 29.8092Z\",\n    fill: \"#E0E0E0\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.69 29.9743C113.34 29.815 113.007 29.6188 112.699 29.389C112.366 29.1934 112.056 28.9624 111.773 28.7C112.124 28.8593 112.456 29.0554 112.765 29.2852C113.097 29.4808 113.407 29.7118 113.69 29.9743Z\",\n    fill: \"#E0E0E0\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.8959 28.1242L53.5759 31.5792L52.6719 31.2064L45.9439 35.4545L44.6309 31.8931C44.6309 31.8931 48.4409 30.7674 49.2669 29.5544C50.0929 28.3413 49.3509 27.9566 49.3509 27.9566L51.2889 26.2244L55.8959 28.1242Z\",\n    fill: \"#EBEBEB\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3518 20.3149C54.3518 20.3149 51.6758 19.3709 48.2538 15.196C44.8318 11.0212 43.6048 5.85522 43.1278 5.81742C42.6508 5.77962 40.6998 4.57842 35.7438 12.6614C30.7878 20.7444 32.0978 22.9156 32.8828 22.9935C33.6688 23.0714 39.1558 22.2265 42.4298 22.9935C45.7028 23.7605 49.7618 26.0072 49.7618 26.0072L54.3518 20.3149Z\",\n    fill: \"#EBEBEB\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.6219 26.0024L58.4709 27.6733L57.9559 28.4214C57.6149 28.9163 57.0969 29.2615 56.5089 29.3858C55.9209 29.5101 55.3079 29.404 54.7959 29.0893L49.1509 26.3305L53.5189 18.9083L59.0439 22.7503C59.5499 23.1063 59.8949 23.6479 60.0029 24.2572C60.1119 24.8665 59.9749 25.4938 59.6219 26.0024Z\",\n    fill: \"#E0E0E0\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.0428 12.8597C33.3958 17.2422 32.0308 21.266 32.9918 21.8489C33.9518 22.4318 36.8838 19.3497 39.5288 14.9672C42.1748 10.5846 43.5408 6.55846 42.5808 5.97786C41.6198 5.39736 38.6888 8.47717 36.0428 12.8597Z\",\n    fill: \"#E0E0E0\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3549 26.163C58.3269 26.2102 57.5668 25.8067 56.6578 25.2568C55.7488 24.7069 55.0388 24.2231 55.0668 24.1759C55.0958 24.1287 55.8578 24.5323 56.7638 25.0798C57.6698 25.6273 58.3859 26.1135 58.3549 26.163Z\",\n    fill: \"#EBEBEB\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.9798 25.101C58.9498 25.1506 58.2718 24.7588 57.4508 24.2302C56.6298 23.7015 56.0018 23.2342 56.0348 23.1847C56.0678 23.1351 56.7428 23.5269 57.5638 24.0579C58.3858 24.5889 59.0108 25.0538 58.9798 25.101Z\",\n    fill: \"#EBEBEB\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.5948 27.2627C57.5828 27.2887 57.3988 27.2226 57.1088 27.0928C56.9628 27.0267 56.7898 26.9465 56.5988 26.8568C56.4078 26.7671 56.2188 26.6349 56.0138 26.5075C55.1878 25.9977 54.5668 25.521 54.5978 25.4762C54.6278 25.4313 55.3058 25.8278 56.1218 26.3329C56.3278 26.4556 56.5158 26.5901 56.6958 26.6916C56.8748 26.7931 57.0398 26.8828 57.1678 26.9631C57.4438 27.1236 57.6068 27.2367 57.5948 27.2627Z\",\n    fill: \"#EBEBEB\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.4329 12.3406C40.4329 12.3406 38.2189 10.5729 36.5269 13.6433C34.8349 16.7136 37.2819 17.5467 37.2819 17.5467C38.5719 15.9678 39.6319 14.2153 40.4329 12.3406Z\",\n    fill: \"#FAFAFA\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.4328 8.79803C43.3958 9.00423 43.3388 9.20643 43.2648 9.40223C43.1418 9.78693 42.9678 10.3462 42.7318 11.033C42.5878 11.3657 42.4318 11.741 42.2598 12.1233L41.9978 12.7298C41.9528 12.8336 41.9078 12.9398 41.8608 13.046C41.8138 13.1522 41.7518 13.2561 41.6978 13.3623C41.4708 13.7855 41.2348 14.2284 40.9898 14.691C40.9288 14.8042 40.8668 14.9199 40.8058 15.0379C40.7448 15.1559 40.6638 15.2739 40.5928 15.3777L40.1638 16.0692L39.7178 16.7583C39.6448 16.8692 39.5788 16.9943 39.4958 17.0911L39.2598 17.405L38.3438 18.5991C38.2688 18.6935 38.1998 18.7903 38.1248 18.88L37.8888 19.1348L37.4428 19.6257L36.6448 20.5036C36.1208 21.0016 35.6848 21.3934 35.3868 21.6648C35.2378 21.8129 35.0758 21.9479 34.9038 22.0683C35.0328 21.8996 35.1758 21.7418 35.3308 21.5963L36.5438 20.388L37.3178 19.5006L37.7498 19.0074C37.8248 18.9248 37.9008 18.8375 37.9858 18.7502C38.0708 18.6628 38.1268 18.5661 38.1998 18.4717L39.0998 17.2775L39.3358 16.9636C39.4158 16.8598 39.4798 16.7442 39.5548 16.6332L39.9938 15.9465L40.4348 15.2621C40.5038 15.1488 40.5838 15.0426 40.6448 14.9246L40.8318 14.58C41.0678 14.1246 41.3158 13.6856 41.5398 13.2679C41.5938 13.1617 41.6548 13.0602 41.7048 12.9564C41.7548 12.8525 41.7988 12.7463 41.8438 12.6425L42.1128 12.043L42.5988 10.9692L43.1938 9.36923C43.2588 9.17283 43.3378 8.98193 43.4328 8.79803Z\",\n    fill: \"#E0E0E0\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.6437 15.1584C30.6437 15.1938 28.9087 15.1348 26.7707 15.031C24.6325 14.9271 22.9027 14.8139 22.905 14.7808C22.9074 14.7478 24.6396 14.8044 26.7778 14.9083C28.9157 15.0121 30.6457 15.1254 30.6437 15.1584Z\",\n    fill: \"#EBEBEB\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.3308 10.1009C32.3168 10.1315 30.3058 9.15675 27.8468 7.90595C25.3878 6.65525 23.3913 5.63095 23.4078 5.60265C23.4243 5.57435 25.4327 6.54665 27.8918 7.79505C30.3508 9.04355 32.3478 10.0655 32.3308 10.1009Z\",\n    fill: \"#EBEBEB\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.3608 6.84164C35.3278 6.84164 34.8888 5.32654 34.3888 3.43854C33.8888 1.55054 33.5038 0.00944409 33.5368 4.40878e-05C33.5698 -0.00945591 34.0088 1.51755 34.5088 3.40555C35.0098 5.29355 35.3938 6.83224 35.3608 6.84164Z\",\n    fill: \"#EBEBEB\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.143 11.1275C102.965 10.5649 102.618 10.0706 102.149 9.71147C101.705 9.34397 101.156 9.12527 100.58 9.08607C100.276 9.07557 99.9728 9.12647 99.6888 9.23547C99.4058 9.34457 99.1468 9.50967 98.9278 9.72087C98.6678 9.97577 98.4748 10.2901 98.3638 10.6366C98.0608 10.2726 97.6498 10.0147 97.1898 9.90057C96.7298 9.78637 96.2458 9.82177 95.8078 10.0018C95.2788 10.2323 94.8348 10.6237 94.5408 11.1204C94.2158 11.614 94.0508 12.1959 94.0688 12.7866C94.1068 13.5375 94.3868 14.2559 94.8658 14.8351C95.4048 15.4144 96.0748 15.8556 96.8208 16.1213C98.0338 16.5933 99.6238 17.1715 99.6238 17.1715C99.6238 17.1715 100.691 16.0457 101.675 15.1914C102.289 14.6913 102.775 14.0511 103.091 13.3247C103.343 12.6167 103.361 11.8466 103.143 11.1275Z\",\n    fill: \"#EBEBEB\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92.5559 4.87344C92.5629 4.52474 92.4629 4.18223 92.2699 3.89163C92.0919 3.59903 91.8259 3.37023 91.5109 3.23793C91.3419 3.17233 91.1619 3.14164 90.9809 3.14774C90.7999 3.15384 90.6219 3.19653 90.4579 3.27333C90.2599 3.37103 90.0899 3.51524 89.9599 3.69344C89.8889 3.51424 89.7799 3.35294 89.6389 3.22144C89.5079 3.09694 89.3529 3.00044 89.1829 2.93794C89.0139 2.87544 88.8329 2.84823 88.6529 2.85793C88.3149 2.88023 87.9939 3.00734 87.7319 3.22144C87.4579 3.43734 87.2559 3.73223 87.1539 4.06633C87.0319 4.49413 87.0499 4.94993 87.2059 5.36663C87.3969 5.79463 87.6879 6.17023 88.0559 6.46173C88.6429 6.95963 89.4239 7.58973 89.4239 7.58973C89.4239 7.58973 90.2359 7.16493 90.9509 6.88173C91.3909 6.72063 91.7859 6.45504 92.1009 6.10774C92.3819 5.75624 92.5409 5.32324 92.5559 4.87344Z\",\n    fill: \"#EBEBEB\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.7138 82.0104C48.5718 81.6914 48.3348 81.4244 48.0348 81.2454C47.7468 81.0594 47.4088 80.9664 47.0668 80.9814C46.7768 80.9994 46.5018 81.1144 46.2838 81.3064C46.0658 81.4984 45.9178 81.7574 45.8628 82.0434C45.7218 81.9084 45.5518 81.8064 45.3648 81.7454C45.1928 81.6894 45.0118 81.6694 44.8318 81.6854C44.6518 81.7024 44.4768 81.7544 44.3178 81.8404C44.0208 82.0124 43.7858 82.2734 43.6448 82.5854C43.4898 82.8984 43.4348 83.2514 43.4868 83.5954C43.5588 84.0364 43.7718 84.4414 44.0928 84.7504C44.4498 85.0534 44.8738 85.2664 45.3298 85.3734C46.0758 85.5684 47.0498 85.8024 47.0498 85.8024C47.0498 85.8024 47.5998 85.0684 48.1238 84.4994C48.4498 84.1684 48.6928 83.7634 48.8318 83.3194C48.9358 82.8814 48.8938 82.4224 48.7138 82.0104Z\",\n    fill: \"#EBEBEB\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.568 36.6695C141.555 36.2535 141.508 35.8395 141.429 35.4305C141.327 34.9535 141.153 34.4945 140.915 34.0695C140.351 33.0465 139.449 32.2511 138.364 31.8205C137.278 31.3899 136.077 31.3505 134.965 31.7091C134.504 31.8526 134.068 32.0667 133.672 32.3439C133.467 32.485 133.272 32.6387 133.087 32.8041C132.904 32.9795 132.733 33.1675 132.574 33.3655C131.909 34.1975 131.527 35.2195 131.484 36.2845C131.442 37.3485 131.741 38.3985 132.338 39.2795C132.482 39.4905 132.64 39.6905 132.81 39.8795C132.983 40.0605 133.166 40.2295 133.36 40.3865C133.734 40.6915 134.152 40.9385 134.599 41.1185C135.43 41.4575 136.336 41.5695 137.224 41.4415C137.997 41.3315 138.734 41.0405 139.374 40.5925C139.904 40.2245 140.36 39.7585 140.714 39.2185C140.986 38.8135 141.194 38.3695 141.332 37.9015C141.443 37.5005 141.522 37.0905 141.568 36.6765C141.568 36.6765 141.568 36.7055 141.568 36.7595C141.568 36.8135 141.568 36.9035 141.554 36.9955C141.549 37.1275 141.533 37.2585 141.507 37.3875C141.48 37.5655 141.441 37.7415 141.389 37.9135C141.258 38.3905 141.054 38.8455 140.785 39.2615C140.391 39.8735 139.872 40.3955 139.262 40.7925C138.652 41.1895 137.964 41.4525 137.245 41.5645C136.333 41.6995 135.402 41.5895 134.547 41.2435C134.086 41.0605 133.654 40.8075 133.268 40.4955C133.069 40.3335 132.88 40.1605 132.702 39.9765C132.532 39.7805 132.374 39.5755 132.23 39.3605C131.611 38.4525 131.3 37.3705 131.342 36.2735C131.385 35.1755 131.779 34.1215 132.466 33.2645C132.629 33.0605 132.806 32.867 132.995 32.6861C133.186 32.516 133.389 32.3583 133.601 32.2141C134.009 31.9297 134.459 31.7108 134.934 31.5651C135.812 31.2861 136.749 31.2486 137.646 31.4566C138.356 31.6222 139.022 31.937 139.601 32.3801C140.18 32.8233 140.657 33.3845 141.002 34.0265C141.239 34.4615 141.407 34.9305 141.5 35.4165C141.538 35.5925 141.564 35.7705 141.576 35.9505C141.593 36.0805 141.599 36.2125 141.592 36.3445C141.592 36.4435 141.592 36.5235 141.592 36.5805C141.592 36.6365 141.573 36.6695 141.568 36.6695Z\",\n    fill: \"#E0E0E0\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.466 41.7344C135.792 41.7394 135.124 41.6094 134.5 41.3524C134.028 41.1654 133.587 40.9074 133.193 40.5874C133.026 40.4574 132.868 40.3154 132.721 40.1624L132.617 40.0614L132.525 39.9544C132.376 39.7864 132.239 39.6084 132.114 39.4214C131.482 38.4934 131.164 37.3884 131.206 36.2664C131.249 35.1444 131.65 34.0654 132.35 33.1884C132.489 33.0134 132.638 32.8481 132.799 32.6931L132.888 32.6034L133.006 32.5019C133.167 32.3612 133.336 32.2311 133.514 32.1125C133.931 31.824 134.391 31.6011 134.875 31.4517C135.774 31.1693 136.731 31.131 137.649 31.3408C138.375 31.5095 139.058 31.8315 139.65 32.2853C140.242 32.7391 140.73 33.3144 141.082 33.9724C141.324 34.4154 141.496 34.8924 141.592 35.3884C141.629 35.5494 141.654 35.7134 141.665 35.8794V35.9314C141.683 36.0664 141.688 36.2034 141.682 36.3394V36.5754C141.683 36.6064 141.683 36.6364 141.682 36.6674V36.7424L141.668 36.9784C141.661 37.1164 141.644 37.2524 141.618 37.3874V37.4364C141.592 37.6014 141.555 37.7654 141.507 37.9254C141.373 38.4124 141.164 38.8754 140.889 39.2984C140.487 39.9274 139.955 40.4634 139.33 40.8704C138.704 41.2774 137.999 41.5464 137.261 41.6584C136.998 41.7014 136.733 41.7264 136.466 41.7344ZM136.466 31.5862C135.966 31.5839 135.47 31.6636 134.996 31.8222C134.545 31.961 134.119 32.1697 133.733 32.4405C133.568 32.5478 133.41 32.6669 133.261 32.7969L133.061 32.9814C132.923 33.1214 132.794 33.2714 132.676 33.4294C132.025 34.2404 131.65 35.2394 131.608 36.2794C131.566 37.3184 131.857 38.3444 132.44 39.2064C132.555 39.3784 132.681 39.5424 132.818 39.6974L132.903 39.7964L132.999 39.8934C133.134 40.0304 133.279 40.1574 133.431 40.2734C133.796 40.5704 134.206 40.8094 134.644 40.9814C135.456 41.3124 136.341 41.4224 137.21 41.3004C137.898 41.1984 138.557 40.9524 139.144 40.5784C139.731 40.2044 140.232 39.7104 140.615 39.1284C140.88 38.7334 141.083 38.3004 141.219 37.8454C141.325 37.4904 141.396 37.1254 141.432 36.7574C141.432 36.7094 141.432 36.6744 141.446 36.6464C141.46 36.6174 141.446 36.5824 141.446 36.5354C141.439 36.1654 141.396 35.7974 141.318 35.4354C141.217 34.9704 141.048 34.5224 140.816 34.1064C140.51 33.5554 140.103 33.0674 139.614 32.6695C139.024 32.1854 138.329 31.846 137.585 31.6783C137.219 31.6068 136.846 31.5736 136.473 31.5791L136.466 31.5862Z\",\n    fill: \"#E0E0E0\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.824 40.3084C139.855 40.2804 140.922 41.3804 142.206 42.7684C143.489 44.1554 144.504 45.3024 144.471 45.3334C144.438 45.3644 143.374 44.2614 142.09 42.8744C140.806 41.4864 139.794 40.3394 139.824 40.3084Z\",\n    fill: \"#E0E0E0\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M144.516 45.4515H144.476C144.429 45.4515 144.318 45.4515 142.015 42.9545C139.711 40.4575 139.714 40.3585 139.716 40.3065V40.2565L139.751 40.2235C139.85 40.1295 139.86 40.1225 140.639 40.9315C141.087 41.4035 141.677 42.0225 142.291 42.6945C142.904 43.3675 143.49 44.0025 143.919 44.4885C144.658 45.3265 144.651 45.3335 144.549 45.4325L144.516 45.4515Z\",\n    fill: \"#E0E0E0\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.6068 30.0924L23.625 30.4865L20.2785 28.3625L19.4926 26.399C19.4926 26.399 17.935 26.9158 19.1434 29.4151C20.3517 31.9143 19.8962 31.3362 19.8962 31.3362C19.8962 31.3362 16.6748 32.6412 16.519 33.0304C16.4058 33.3114 17.6023 36.5545 18.2654 38.3055C18.5982 39.1875 19.462 39.7874 20.3588 39.6674C20.4842 39.6524 20.6071 39.6214 20.7246 39.5744C21.5293 39.2514 25.3808 36.9504 25.3808 36.9504L27.08 36.2684L24.6068 30.0924Z\",\n    fill: \"#EBEBEB\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.2078 28.4263L29.2988 35.3955L27.6138 36.0705L24.9725 29.4789L27.2078 28.4263Z\",\n    fill: \"#EBEBEB\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.602 81.0595L123.444 81.2505L120.333 78.1425L119.953 75.8295C119.953 75.8295 118.143 76.0135 118.853 79.0085C119.564 82.0035 119.207 81.2695 119.207 81.2695C119.207 81.2695 115.406 81.9105 115.144 82.2955C114.955 82.5715 115.474 86.3695 115.771 88.4315C115.922 89.4675 116.715 90.3195 117.711 90.4065C117.851 90.4235 117.992 90.4235 118.131 90.4065C119.075 90.2515 123.795 88.6795 123.795 88.6795L125.797 88.3495L124.602 81.0595Z\",\n    fill: \"#F5F5F5\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.817 79.8765L128.411 87.9215L126.427 88.2495L125.145 80.4805L127.817 79.8765Z\",\n    fill: \"#F5F5F5\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.9828 88.5545C63.5588 88.4925 64.1048 88.2635 64.5528 87.8945C65.0008 87.5265 65.3298 87.0345 65.5008 86.4795C66.0058 84.9245 65.2318 83.2775 63.7728 82.8005C62.3148 82.3245 60.7198 83.2045 60.2148 84.7615C60.0238 85.3165 60.0028 85.9145 60.1528 86.4815C60.3028 87.0485 60.6168 87.5575 61.0568 87.9455C56.7878 87.2565 55.5558 91.7425 55.5558 91.7425L65.1798 94.8625C65.1798 94.8625 66.8318 90.4565 62.9828 88.5545Z\",\n    fill: \"#EBEBEB\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.782 46.0864H30.8729C22.785 46.0864 16.2288 52.6424 16.2288 60.7304V61.7634C16.2288 69.8514 22.785 76.4074 30.8729 76.4074H125.782C133.87 76.4074 140.426 69.8514 140.426 61.7634V60.7304C140.426 52.6424 133.87 46.0864 125.782 46.0864Z\",\n    fill: \"#5A13A0\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M125.782 46.0864H30.8729C22.785 46.0864 16.2288 52.6424 16.2288 60.7304V61.7634C16.2288 69.8514 22.785 76.4074 30.8729 76.4074H125.782C133.87 76.4074 140.426 69.8514 140.426 61.7634V60.7304C140.426 52.6424 133.87 46.0864 125.782 46.0864Z\",\n    fill: \"black\"\n  }))), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.266 43.6035H31.3899C23.0164 43.6035 16.2288 50.3915 16.2288 58.7645C16.2288 67.1375 23.0164 73.9245 31.3899 73.9245H125.266C133.639 73.9245 140.426 67.1375 140.426 58.7645C140.426 50.3915 133.639 43.6035 125.266 43.6035Z\",\n    fill: \"#5A13A0\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3718 62.0554C50.5558 62.0554 50.6798 62.0914 50.7438 62.1634C50.8158 62.2274 50.8518 62.3234 50.8518 62.4514C50.8518 62.6754 50.7918 62.8634 50.6718 63.0154C50.5518 63.1674 50.3518 63.2434 50.0718 63.2434C49.5918 63.2434 49.1878 63.1754 48.8598 63.0394C48.5398 62.9034 48.2958 62.6754 48.1278 62.3554C47.8318 62.4514 47.5038 62.4994 47.1438 62.4994C46.7278 62.4994 46.3638 62.4434 46.0518 62.3314C45.7398 62.2114 45.4998 62.0434 45.3318 61.8274C45.1638 61.6114 45.0798 61.3594 45.0798 61.0714C45.0798 60.7514 45.1878 60.4274 45.4038 60.0994C45.6198 59.7634 45.9398 59.4514 46.3638 59.1634C46.7878 58.8754 47.2958 58.6354 47.8878 58.4434V57.8794L48.9798 57.4234L49.0758 57.4474V61.1194C49.0758 61.3834 49.1158 61.5834 49.1958 61.7194C49.2838 61.8474 49.4158 61.9354 49.5918 61.9834C49.7758 62.0314 50.0358 62.0554 50.3718 62.0554ZM47.2518 61.3474C47.4518 61.3474 47.6638 61.3274 47.8878 61.2874V61.1194V59.6074C47.3998 59.7434 46.9878 59.9194 46.6518 60.1354C46.3238 60.3434 46.1238 60.5594 46.0518 60.7834C46.1158 60.9594 46.2638 61.0994 46.4958 61.2034C46.7358 61.2994 46.9878 61.3474 47.2518 61.3474ZM46.7358 56.6194L45.6558 55.8634L46.3158 54.8554L47.3958 55.5994L46.7358 56.6194ZM48.4278 56.6194L47.3478 55.8634L48.0198 54.8554L49.0998 55.5994L48.4278 56.6194ZM55.7158 62.0554C55.8998 62.0554 56.0238 62.0914 56.0878 62.1634C56.1598 62.2274 56.1958 62.3234 56.1958 62.4514C56.1958 62.6754 56.1398 62.8634 56.0278 63.0154C55.9158 63.1674 55.7198 63.2434 55.4398 63.2434H54.6838C54.3878 63.2434 54.0838 63.2114 53.7718 63.1474C53.4678 63.0834 53.1718 62.9954 52.8838 62.8834C52.2598 63.1234 51.5478 63.2434 50.7478 63.2434H50.0998L50.3758 62.0554H51.4558H51.5998C51.2478 61.6634 51.0718 61.2554 51.0718 60.8314C51.0718 60.4714 51.1638 60.1154 51.3478 59.7634C51.5398 59.4034 51.7878 59.1114 52.0918 58.8874C52.4038 58.6634 52.7278 58.5514 53.0638 58.5514C53.3598 58.5514 53.6358 58.6514 53.8918 58.8514C54.1558 59.0434 54.3638 59.2914 54.5158 59.5954C54.6678 59.8914 54.7438 60.1874 54.7438 60.4834C54.7438 61.0754 54.5598 61.5874 54.1918 62.0194C54.4078 62.0434 54.6318 62.0554 54.8638 62.0554H55.7158ZM52.0318 60.6874C52.0318 60.8954 52.1078 61.0874 52.2598 61.2634C52.4198 61.4394 52.6478 61.5914 52.9438 61.7194C53.1998 61.5914 53.3998 61.4354 53.5438 61.2514C53.6958 61.0594 53.7718 60.8554 53.7718 60.6394C53.7718 60.4874 53.7278 60.3394 53.6398 60.1954C53.5518 60.0514 53.4398 59.9354 53.3038 59.8474C53.1758 59.7514 53.0478 59.7034 52.9198 59.7034C52.7838 59.7034 52.6438 59.7514 52.4998 59.8474C52.3638 59.9434 52.2518 60.0714 52.1638 60.2314C52.0758 60.3834 52.0318 60.5354 52.0318 60.6874ZM52.3078 57.3394L51.2278 56.5834L51.8878 55.5754L52.9678 56.3194L52.3078 57.3394ZM53.9998 57.3394L52.9198 56.5834L53.5918 55.5754L54.6718 56.3194L53.9998 57.3394ZM59.8838 62.0554C60.0598 62.0554 60.1838 62.0914 60.2558 62.1634C60.3278 62.2274 60.3638 62.3234 60.3638 62.4514C60.3638 62.6754 60.3078 62.8634 60.1958 63.0154C60.0918 63.1674 59.8998 63.2434 59.6198 63.2434C59.1958 63.2434 58.8038 63.1994 58.4438 63.1114C58.0838 63.0154 57.7878 62.8714 57.5558 62.6794C57.3478 62.8714 57.1038 63.0154 56.8238 63.1114C56.5518 63.1994 56.2278 63.2434 55.8518 63.2434H55.4438L55.7198 62.0554H56.0438C56.2198 62.0554 56.3878 62.0394 56.5478 62.0074C56.7078 61.9754 56.8318 61.9274 56.9198 61.8634C57.0718 61.5754 57.2398 60.9874 57.4238 60.0994L58.6238 59.8114L58.7438 59.8954C58.6478 60.3034 58.5558 60.6594 58.4678 60.9634C58.3798 61.2594 58.2838 61.5234 58.1798 61.7554C58.5638 61.9554 59.1318 62.0554 59.8838 62.0554ZM56.9198 65.9074L55.8278 65.1514L56.4998 64.1434L57.5798 64.8874L56.9198 65.9074ZM58.6358 65.9074L57.5558 65.1514L58.2278 64.1434L59.3078 64.8874L58.6358 65.9074ZM62.3518 57.5554C62.7358 57.5554 63.0718 57.6954 63.3598 57.9754C63.6558 58.2474 63.8798 58.6114 64.0318 59.0674C64.1918 59.5234 64.2718 60.0154 64.2718 60.5434C64.2718 61.0794 64.2078 61.5434 64.0798 61.9354C63.9518 62.3194 63.7678 62.5994 63.5278 62.7754C63.3198 62.9034 63.0638 63.0034 62.7598 63.0754C62.4558 63.1394 62.0638 63.1834 61.5838 63.2074C61.1038 63.2314 60.4438 63.2434 59.6038 63.2434L59.8798 62.0554C60.9438 62.0554 61.7118 62.0354 62.1838 61.9954C62.6638 61.9554 63.0038 61.8954 63.2038 61.8154C63.2278 61.7114 63.2558 61.5114 63.2878 61.2154C62.9198 61.3034 62.5158 61.3474 62.0758 61.3474C61.5558 61.3474 61.1598 61.2234 60.8878 60.9754C60.6238 60.7194 60.4918 60.3714 60.4918 59.9314C60.4918 59.5634 60.5758 59.1954 60.7438 58.8274C60.9198 58.4594 61.1478 58.1554 61.4278 57.9154C61.7158 57.6754 62.0238 57.5554 62.3518 57.5554ZM61.4278 59.7634C61.4278 59.9314 61.4998 60.0554 61.6438 60.1354C61.7958 60.2154 62.0198 60.2554 62.3158 60.2554C62.6838 60.2554 63.0118 60.2274 63.2998 60.1714C63.2678 59.9234 63.2038 59.6874 63.1078 59.4634C63.0118 59.2394 62.8918 59.0594 62.7478 58.9234C62.6038 58.7794 62.4518 58.7074 62.2918 58.7074C62.1478 58.7074 62.0078 58.7594 61.8718 58.8634C61.7438 58.9594 61.6358 59.0914 61.5478 59.2594C61.4678 59.4194 61.4278 59.5874 61.4278 59.7634ZM61.6078 56.4154L60.5278 55.6594L61.1878 54.6514L62.2678 55.3954L61.6078 56.4154ZM63.2998 56.4154L62.2198 55.6594L62.8918 54.6514L63.9718 55.3954L63.2998 56.4154ZM66.8308 63.3274C66.6148 63.3274 66.3588 63.3154 66.0628 63.2914C65.7668 63.2674 65.5268 63.2314 65.3428 63.1834L65.5108 62.0554L65.5708 62.0074C65.7228 62.0394 65.9348 62.0674 66.2068 62.0914C66.4868 62.1074 66.7268 62.1154 66.9268 62.1154C67.3108 62.1154 67.6868 62.0834 68.0548 62.0194C68.4308 61.9554 68.6788 61.8674 68.7988 61.7554C68.7188 61.3634 68.5028 60.9194 68.1508 60.4234C67.7988 59.9194 67.3828 59.4434 66.9028 58.9954L67.5868 57.9034H67.6828C68.3148 58.5674 68.8108 59.2034 69.1708 59.8114C69.5388 60.4114 69.7228 60.9554 69.7228 61.4434C69.7228 62.0674 69.4708 62.5394 68.9668 62.8594C68.4628 63.1714 67.7508 63.3274 66.8308 63.3274ZM77.0278 65.4754C76.2758 65.4754 75.6438 65.3714 75.1318 65.1634C74.6198 64.9554 74.2358 64.6674 73.9798 64.2994C73.7318 63.9314 73.6078 63.5114 73.6078 63.0394C73.6078 62.8074 73.6238 62.5754 73.6558 62.3434C73.6958 62.1034 73.7438 61.8874 73.7998 61.6954L74.7718 61.3594L74.8798 61.4194C74.7918 61.8354 74.7478 62.1914 74.7478 62.4874C74.7478 62.8714 74.8238 63.1954 74.9758 63.4594C75.1278 63.7234 75.3878 63.9274 75.7558 64.0714C76.1318 64.2154 76.6318 64.2874 77.2558 64.2874C77.7998 64.2874 78.3078 64.2474 78.7798 64.1674C79.2598 64.0954 79.6598 63.9914 79.9798 63.8554C80.2998 63.7274 80.5078 63.5754 80.6038 63.3994C80.6038 63.2474 80.4678 63.0914 80.1958 62.9314C79.9318 62.7714 79.4158 62.6034 78.6478 62.4274L78.9838 61.3714C79.7118 61.5554 80.2718 61.7394 80.6638 61.9234C81.0558 62.0994 81.3238 62.2794 81.4678 62.4634C81.6198 62.6394 81.6958 62.8474 81.6958 63.0874C81.6558 63.5754 81.4318 63.9994 81.0238 64.3594C80.6158 64.7194 80.0638 64.9954 79.3678 65.1874C78.6798 65.3794 77.8998 65.4754 77.0278 65.4754ZM76.3678 68.1394L75.2758 67.3834L75.9478 66.3754L77.0278 67.1194L76.3678 68.1394ZM78.0838 68.1394L77.0038 67.3834L77.6758 66.3754L78.7558 67.1194L78.0838 68.1394ZM79.7218 58.3154C80.1058 58.3154 80.4418 58.4514 80.7298 58.7234C81.0258 58.9954 81.2498 59.3594 81.4018 59.8154C81.5618 60.2714 81.6418 60.7634 81.6418 61.2914C81.6418 61.8914 81.5658 62.3674 81.4138 62.7194C81.2618 63.0714 81.0298 63.3514 80.7178 63.5594C80.4138 63.7594 79.9858 63.9554 79.4338 64.1474L78.9898 63.1274C79.5738 62.9994 80.0978 62.7874 80.5618 62.4914C80.5938 62.3874 80.6218 62.2114 80.6458 61.9634C80.2778 62.0514 79.8778 62.0954 79.4458 62.0954C78.9178 62.0954 78.5218 61.9714 78.2578 61.7234C77.9938 61.4754 77.8618 61.1274 77.8618 60.6794C77.8618 60.3114 77.9458 59.9434 78.1138 59.5754C78.2898 59.2074 78.5178 58.9074 78.7978 58.6754C79.0858 58.4354 79.3938 58.3154 79.7218 58.3154ZM78.7978 60.5114C78.7978 60.6874 78.8698 60.8154 79.0138 60.8954C79.1658 60.9754 79.3898 61.0154 79.6858 61.0154C80.0538 61.0154 80.3818 60.9874 80.6698 60.9314C80.6378 60.6754 80.5738 60.4354 80.4778 60.2114C80.3818 59.9874 80.2618 59.8074 80.1178 59.6714C79.9738 59.5274 79.8178 59.4554 79.6498 59.4554C79.5058 59.4554 79.3658 59.5074 79.2298 59.6114C79.1018 59.7074 78.9978 59.8394 78.9178 60.0074C78.8378 60.1674 78.7978 60.3354 78.7978 60.5114ZM79.8298 57.1754L78.7138 56.3954L79.4098 55.3634L80.5258 56.1314L79.8298 57.1754ZM94.3518 55.0594V60.8434C94.3518 61.4754 94.2398 61.9754 94.0158 62.3434C93.7918 62.7034 93.4118 62.9674 92.8758 63.1354C92.3398 63.2954 91.5838 63.3754 90.6078 63.3754H89.8278C88.4838 63.3754 87.4678 63.1994 86.7798 62.8474C86.0998 62.4874 85.7598 61.9234 85.7598 61.1554C85.7598 60.6514 85.8238 60.1874 85.9518 59.7634L86.8278 59.4274L86.9238 59.4874C86.8518 59.8794 86.8158 60.2274 86.8158 60.5314C86.8158 60.9714 86.9358 61.3114 87.1758 61.5514C87.4238 61.7914 87.7878 61.9594 88.2678 62.0554C88.7558 62.1514 89.3998 62.1994 90.1998 62.1994H90.9558C91.4518 62.1994 91.8918 62.1714 92.2758 62.1154C92.6678 62.0514 92.9358 61.9714 93.0798 61.8754C93.1358 61.6354 93.1638 61.3194 93.1638 60.9274V55.2874L94.2558 54.9994L94.3518 55.0594ZM89.0358 59.3074C89.2758 59.3074 89.4598 59.3034 89.5878 59.2954C89.5158 59.1834 89.4558 59.0634 89.4078 58.9354C89.3678 58.8074 89.3478 58.6834 89.3478 58.5634C89.3478 58.2674 89.4398 58.0314 89.6238 57.8554C89.8158 57.6714 90.0678 57.5794 90.3798 57.5794C90.6278 57.5794 90.9118 57.6434 91.2318 57.7714L91.0518 58.4074C90.8358 58.3354 90.6478 58.2994 90.4878 58.2994C90.1678 58.2994 90.0078 58.4394 90.0078 58.7194C90.0078 58.8234 90.0278 58.9234 90.0678 59.0194C90.1158 59.1154 90.1798 59.1994 90.2598 59.2714C90.6118 59.2474 90.9798 59.2154 91.3638 59.1754L91.4238 59.8354C90.7918 59.9154 90.0198 59.9714 89.1078 60.0034L89.0358 59.3074ZM99.7318 62.0554C99.9158 62.0554 100.044 62.0914 100.116 62.1634C100.188 62.2274 100.224 62.3234 100.224 62.4514C100.224 62.6754 100.168 62.8634 100.056 63.0154C99.9438 63.1674 99.7478 63.2434 99.4678 63.2434C99.0598 63.2434 98.7278 63.1554 98.4718 62.9794C98.3358 63.3634 98.0998 63.7194 97.7638 64.0474C97.4358 64.3754 97.0238 64.6554 96.5278 64.8874C96.0398 65.1274 95.4878 65.2994 94.8718 65.4034L94.2358 64.5274L94.3078 64.4194C95.2998 64.2354 96.0678 63.9514 96.6118 63.5674C97.1638 63.1914 97.5238 62.7674 97.6918 62.2954C97.5078 61.8234 97.2038 61.1674 96.7798 60.3274L97.6438 59.3794H97.7758C97.8798 59.6674 98.0438 60.1114 98.2678 60.7114L98.3998 61.0594C98.5118 61.3554 98.6158 61.5714 98.7118 61.7074C98.8158 61.8434 98.9398 61.9354 99.0838 61.9834C99.2358 62.0314 99.4518 62.0554 99.7318 62.0554ZM103.911 62.0554C104.087 62.0554 104.211 62.0914 104.283 62.1634C104.355 62.2274 104.391 62.3234 104.391 62.4514C104.391 62.6754 104.335 62.8634 104.223 63.0154C104.119 63.1674 103.927 63.2434 103.647 63.2434C103.223 63.2434 102.831 63.1994 102.471 63.1114C102.111 63.0154 101.815 62.8714 101.583 62.6794C101.375 62.8714 101.131 63.0154 100.851 63.1114C100.579 63.1994 100.255 63.2434 99.8788 63.2434H99.4708L99.7468 62.0554H100.071C100.247 62.0554 100.415 62.0394 100.575 62.0074C100.735 61.9754 100.859 61.9274 100.947 61.8634C101.099 61.5754 101.267 60.9874 101.451 60.0994L102.651 59.8114L102.771 59.8954C102.675 60.3034 102.583 60.6594 102.495 60.9634C102.407 61.2594 102.311 61.5234 102.207 61.7554C102.591 61.9554 103.159 62.0554 103.911 62.0554ZM101.427 58.5274L100.347 57.7714L101.007 56.7634L102.087 57.5074L101.427 58.5274ZM103.119 58.5274L102.039 57.7714L102.711 56.7634L103.791 57.5074L103.119 58.5274ZM112.067 58.9594C112.467 59.9354 112.667 60.7034 112.667 61.2634C112.667 61.9354 112.455 62.4354 112.031 62.7634C111.607 63.0834 111.027 63.2434 110.291 63.2434C109.779 63.2434 109.295 63.1394 108.839 62.9314C108.559 63.1394 108.187 63.2434 107.723 63.2434C107.347 63.2434 106.995 63.1954 106.667 63.0994C106.347 62.9954 106.079 62.8674 105.863 62.7154C105.631 62.8994 105.339 63.0354 104.987 63.1234C104.635 63.2034 104.183 63.2434 103.631 63.2434L103.895 62.0554C104.279 62.0554 104.583 62.0394 104.807 62.0074C105.039 61.9754 105.215 61.9274 105.335 61.8634C105.399 61.7674 105.459 61.6154 105.515 61.4074C105.579 61.1914 105.655 60.9074 105.743 60.5554L107.027 60.3634L107.075 60.4234C106.987 60.6874 106.895 60.9474 106.799 61.2034C106.711 61.4514 106.623 61.6554 106.535 61.8154C106.727 61.8874 106.943 61.9474 107.183 61.9954C107.423 62.0354 107.647 62.0554 107.855 62.0554C108.095 62.0554 108.271 62.0154 108.383 61.9354C108.439 61.8634 108.507 61.6914 108.587 61.4194C108.675 61.1474 108.763 60.8594 108.851 60.5554L110.051 60.3634L110.099 60.4114C109.875 61.1074 109.695 61.6154 109.559 61.9354C109.855 62.0154 110.143 62.0554 110.423 62.0554C110.935 62.0554 111.299 62.0074 111.515 61.9114C111.547 61.7834 111.563 61.6794 111.563 61.5994C111.563 61.3594 111.507 61.0834 111.395 60.7714C111.291 60.4514 111.151 60.1034 110.975 59.7274L111.995 58.9474L112.067 58.9594ZM109.115 57.0154L108.023 56.2474L108.707 55.2514L109.787 55.9834L109.115 57.0154ZM108.443 58.5274L107.351 57.7714L108.023 56.7634L109.103 57.5074L108.443 58.5274ZM110.135 58.5274L109.055 57.7714L109.739 56.7634L110.819 57.5074L110.135 58.5274ZM114.186 63.3154L114.102 63.2674V55.2874L115.206 54.9994L115.29 55.0594L115.278 63.0874L114.186 63.3154Z\",\n    fill: \"white\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M106.624 43.6035C106.624 43.6035 105.942 43.6175 105.597 43.6035C104.417 43.6035 102.293 43.6035 102.293 43.6035L100.769 46.4095C101.12 47.1525 101.578 47.9815 102.383 48.1465C102.788 48.1995 103.2 48.1475 103.58 47.9955C104.535 47.7015 105.428 47.2355 106.216 46.6195C106.706 46.2715 107.072 45.7755 107.259 45.2035C107.407 44.6205 107.167 43.8585 106.624 43.6035Z\",\n    fill: \"black\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M52.6268 46.6315C52.2708 45.7555 51.7018 44.1835 50.9588 43.6035C50.9588 43.6035 46.1988 43.6835 46.1748 43.6035L48.3858 51.5235C49.0938 52.0875 49.4528 52.8665 49.6818 53.6025C49.9108 54.3395 50.0998 55.1295 50.6258 55.6845C51.1518 56.2385 52.1948 56.3925 52.6528 55.7815C53.1698 55.0895 52.6078 54.1295 52.5918 53.2675C52.5748 52.4065 53.1198 51.6465 53.3418 50.8135C53.7218 49.4185 53.1698 47.9645 52.6268 46.6315Z\",\n    fill: \"black\"\n  }))), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.4348 19.1301C88.7658 18.2923 89.0988 17.4286 89.1028 16.5341C89.1078 15.6397 88.7088 14.6628 87.9228 14.2757C87.1918 13.9194 86.3108 14.1246 85.5398 13.8768C84.5958 13.57 83.9608 12.6378 83.5118 11.715C83.0638 10.7923 82.6978 9.79165 81.9688 9.08835C81.4798 8.63505 80.8618 8.34385 80.2008 8.25475C79.5398 8.16565 78.8678 8.28285 78.2758 8.59045C77.4208 8.03585 76.4288 7.72944 75.4108 7.70544C74.1388 7.70544 72.6938 7.85175 71.8348 8.79105C71.1698 9.51795 70.7588 10.443 69.9308 10.9645C68.7878 11.7009 67.2898 11.151 65.9348 11.243C65.6588 11.2619 65.3378 11.3421 65.2268 11.597C65.1988 11.7134 65.1958 11.8344 65.2188 11.952C65.2408 12.0696 65.2878 12.1811 65.3568 12.2791L66.4728 14.4361C66.1898 14.573 65.8788 14.6441 65.5648 14.6441C65.2498 14.6441 64.9388 14.573 64.6558 14.4361C64.7668 15.8751 65.3788 17.2296 66.3858 18.264C66.1498 18.1012 65.7838 18.2876 65.6778 18.5614C65.5928 18.8461 65.6058 19.1514 65.7158 19.4276C65.9798 20.2969 66.4268 21.0993 67.0278 21.7808C67.6288 22.4623 68.3688 23.0072 69.1978 23.3783C70.0268 23.7494 70.9258 23.9382 71.8348 23.9321C72.7428 23.9259 73.6398 23.7251 74.4638 23.3428L81.9568 23.6755C82.0688 23.9608 82.2478 24.2151 82.4788 24.4164C82.7098 24.6177 82.9858 24.7602 83.2838 24.8319C84.0998 24.1876 84.2278 23.836 84.2278 23.836C84.7558 24.2018 84.3458 24.0225 84.7558 24.2019C85.6998 24.6149 87.0498 24.0484 87.2268 23.01C87.2688 22.5877 87.4328 22.1868 87.6988 21.8559C87.9868 21.5444 88.4068 21.417 88.7728 21.2164C89.3598 20.8922 89.8258 20.3851 90.0988 19.7721C89.7928 19.786 89.4858 19.7361 89.1998 19.6257C88.9138 19.5152 88.6528 19.3464 88.4348 19.1301Z\",\n    fill: \"#263238\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.9589 16.2887C69.9719 14.4799 70.6659 12.7424 71.9029 11.4218C73.1389 10.1012 74.8269 9.29434 76.6309 9.16154L77.0039 9.13565C81.0299 9.07665 83.3309 12.4608 83.2789 16.487L83.8759 35.0294L74.6859 35.6854L74.3369 29.6534C74.3369 29.6534 70.4399 29.3372 70.1099 25.488C69.9499 23.6354 69.9329 19.7792 69.9589 16.2887Z\",\n    fill: \"#FFBE9D\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.8887 19.2033C71.8987 19.3468 71.9627 19.4812 72.0697 19.5777C72.1767 19.6742 72.3167 19.7253 72.4607 19.7201C72.5307 19.7201 72.6007 19.7062 72.6647 19.679C72.7297 19.6519 72.7887 19.6121 72.8387 19.5621C72.8877 19.512 72.9267 19.4526 72.9527 19.3874C72.9797 19.3222 72.9927 19.2524 72.9917 19.182C72.9827 19.0382 72.9177 18.9035 72.8117 18.8069C72.7047 18.7102 72.5637 18.6594 72.4197 18.6652C72.3497 18.6645 72.2797 18.6781 72.2147 18.705C72.1497 18.7319 72.0907 18.7716 72.0407 18.8218C71.9917 18.872 71.9527 18.9316 71.9267 18.9971C71.9007 19.0627 71.8877 19.1328 71.8887 19.2033Z\",\n    fill: \"#263238\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.1219 17.7638C71.1959 17.8322 71.5939 17.4924 72.1819 17.4499C72.7699 17.4074 73.2299 17.6718 73.2889 17.5962C73.3199 17.5608 73.2389 17.4358 73.0409 17.313C72.7709 17.1547 72.4589 17.083 72.1469 17.1077C71.8389 17.1292 71.5469 17.2483 71.3109 17.4476C71.1389 17.601 71.0799 17.7355 71.1219 17.7638Z\",\n    fill: \"#263238\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.0467 22.5734C75.0467 22.538 74.6737 22.5026 74.0727 22.4696C73.9187 22.4696 73.7748 22.446 73.7418 22.3445C73.7168 22.1895 73.7397 22.0305 73.8077 21.889C73.9247 21.5114 74.0457 21.1181 74.1717 20.709C74.6717 19.024 75.0238 17.641 74.9548 17.6245C74.8868 17.608 74.4268 18.9532 73.9258 20.6382C73.8068 21.0536 73.6917 21.4469 73.5817 21.8182C73.5007 22.0078 73.4878 22.2198 73.5458 22.4176C73.5718 22.4695 73.6098 22.5147 73.6558 22.5499C73.7018 22.5851 73.7558 22.6092 73.8128 22.6206C73.8968 22.6382 73.9838 22.6438 74.0698 22.6371C74.6738 22.6324 75.0467 22.6088 75.0467 22.5734Z\",\n    fill: \"#263238\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.9408 16.3382C71.0748 16.4657 71.5658 16.2934 72.1678 16.2509C72.7698 16.2084 73.2838 16.2698 73.3898 16.1235C73.4378 16.0503 73.3498 15.9205 73.1188 15.8072C72.8008 15.6674 72.4518 15.6129 72.1068 15.6491C71.7618 15.6739 71.4298 15.7887 71.1438 15.9819C70.9408 16.1329 70.8788 16.2769 70.9408 16.3382Z\",\n    fill: \"#263238\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.9058 19.3826C82.9698 19.3496 85.5018 18.4056 85.6028 21.0346C85.7048 23.6637 83.0398 23.2412 83.0308 23.1586C83.0218 23.076 82.9058 19.3826 82.9058 19.3826Z\",\n    fill: \"#FFBE9D\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M83.5638 22.1581C83.5758 22.1581 83.6138 22.1887 83.6918 22.2218C83.8028 22.2652 83.9258 22.2652 84.0358 22.2218C84.3098 22.1085 84.5268 21.6554 84.5198 21.1787C84.5178 20.9519 84.4638 20.7286 84.3638 20.5249C84.3358 20.4435 84.2888 20.3702 84.2258 20.3114C84.1628 20.2526 84.0858 20.21 84.0028 20.1875C83.9498 20.1765 83.8948 20.1841 83.8468 20.209C83.7988 20.2339 83.7608 20.2746 83.7388 20.3243C83.7058 20.3999 83.7248 20.4518 83.7108 20.4565C83.6968 20.4612 83.6518 20.414 83.6678 20.3055C83.6798 20.2395 83.7138 20.1795 83.7648 20.1355C83.8358 20.0773 83.9258 20.0493 84.0178 20.0577C84.1268 20.0739 84.2308 20.1183 84.3178 20.1865C84.4048 20.2548 84.4728 20.3446 84.5148 20.4471C84.6368 20.671 84.7018 20.9214 84.7038 21.1763C84.7038 21.7097 84.4678 22.2171 84.0808 22.3445C84.0108 22.3683 83.9358 22.376 83.8628 22.367C83.7888 22.358 83.7188 22.3326 83.6558 22.2926C83.5738 22.2218 83.5568 22.1651 83.5638 22.1581Z\",\n    fill: \"#EB996E\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M83.7978 13.3504C83.5958 12.5831 83.2468 11.8619 82.7708 11.2264C81.3908 9.30783 78.2378 8.41103 76.4468 8.57143C74.6548 8.73193 72.7978 10.0582 71.1298 10.7238C70.0368 11.1604 69.2088 12.1634 69.6258 12.9398C68.9788 13.1915 68.2948 13.3366 67.6008 13.3693C67.6008 13.3693 67.5378 14.3534 68.0848 14.6154L69.8078 15.7435C72.1038 16.0479 76.1348 13.787 76.9118 13.0767C77.6318 12.4153 78.4299 11.8432 79.2879 11.3728C78.5569 13.2914 80.9399 12.8666 80.8739 13.61C80.1449 16.3075 82.3468 17.3034 82.3468 17.3034L82.4008 19.6634C82.3508 20.2676 82.6108 20.7325 83.2148 20.6924C83.2148 20.6924 83.8709 19.7909 83.9819 19.0569C84.1989 17.6409 84.0598 14.7641 83.7978 13.3504Z\",\n    fill: \"#263238\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.3058 29.6534C76.0948 29.5227 77.8098 28.8813 79.2458 27.8055C79.2458 27.8055 78.2608 30.6705 74.3838 30.5974L74.3058 29.6534Z\",\n    fill: \"#EB996E\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.4518 18.8494C77.4608 18.993 77.5258 19.1273 77.6328 19.2238C77.7388 19.3203 77.8788 19.3714 78.0228 19.3662C78.0938 19.3669 78.1638 19.3534 78.2288 19.3265C78.2938 19.2996 78.3528 19.2598 78.4028 19.2096C78.4518 19.1594 78.4908 19.0998 78.5168 19.0343C78.5428 18.9687 78.5558 18.8986 78.5538 18.8281C78.5448 18.6846 78.4798 18.5502 78.3738 18.4537C78.2668 18.3572 78.1268 18.3061 77.9828 18.3113C77.9128 18.3113 77.8428 18.3253 77.7778 18.3524C77.7128 18.3795 77.6538 18.4193 77.6048 18.4693C77.5558 18.5194 77.5168 18.5788 77.4898 18.644C77.4638 18.7093 77.4508 18.7791 77.4518 18.8494Z\",\n    fill: \"#263238\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.8048 17.4663C76.8788 17.5419 77.3428 17.2492 77.9848 17.2728C78.6268 17.2964 79.0988 17.6127 79.1648 17.5442C79.2008 17.5112 79.1278 17.379 78.9288 17.2351C78.6498 17.0451 78.3228 16.9387 77.9848 16.9283C77.6538 16.9124 77.3258 16.9945 77.0408 17.1643C76.8408 17.3059 76.7698 17.4333 76.8048 17.4663Z\",\n    fill: \"#263238\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.7438 15.609C76.8008 15.7718 77.3928 15.6987 78.0888 15.7883C78.7848 15.878 79.3468 16.0716 79.4408 15.9277C79.4838 15.8592 79.3868 15.7057 79.1608 15.5476C78.8578 15.3547 78.5158 15.2332 78.1598 15.1923C77.8038 15.1514 77.4428 15.1922 77.1048 15.3116C76.8498 15.406 76.7198 15.5335 76.7438 15.609Z\",\n    fill: \"#263238\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9928 23.7157C75.4898 23.5489 75.9988 23.4188 76.5148 23.3263L76.8898 23.2083C76.9848 23.377 77.0408 23.5642 77.0558 23.757C77.0708 23.9498 77.0428 24.1435 76.9748 24.3246C76.8958 24.4548 76.7898 24.5667 76.6638 24.6529C76.5388 24.7392 76.3958 24.7978 76.2458 24.8249C76.1408 24.8525 76.0308 24.8578 75.9238 24.8403C75.8158 24.8228 75.7138 24.783 75.6228 24.7234C75.6228 24.7234 75.1368 24.5322 74.9928 23.7157Z\",\n    fill: \"#EB996E\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.0198 24.8273C76.2218 24.7955 76.4138 24.7145 76.5788 24.5913C76.7488 24.4562 76.8738 24.2715 76.9348 24.0627C77.0138 23.8083 77.0138 23.5359 76.9348 23.2815L76.9208 23.2391L76.9918 23.2792C76.4248 23.4043 75.9128 23.5152 75.5428 23.5836C75.3438 23.6339 75.1408 23.6639 74.9358 23.6733C75.1268 23.5977 75.3228 23.5393 75.5238 23.4986C75.8898 23.4066 76.3988 23.2862 76.9658 23.1588L77.0198 23.147L77.0368 23.1966L77.0508 23.2438C77.1408 23.5215 77.1408 23.8204 77.0508 24.0981C76.9778 24.3258 76.8328 24.5237 76.6378 24.6621C76.5068 24.7544 76.3548 24.8113 76.1968 24.8273C76.0788 24.8486 76.0168 24.8344 76.0198 24.8273Z\",\n    fill: \"#263238\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.0269 21.4123C87.9729 21.4082 87.9189 21.3946 87.8689 21.3722C87.7229 21.3073 87.5959 21.2057 87.5009 21.0772C87.3489 20.8759 87.2549 20.6367 87.2289 20.3857C87.2039 20.0572 87.2169 19.7269 87.2699 19.4016C87.3369 19.0187 87.3208 18.6256 87.2198 18.2499C87.1528 18.0482 87.0298 17.8703 86.8638 17.7378C86.6828 17.5974 86.4838 17.4808 86.2738 17.3909C86.0448 17.2936 85.8248 17.1759 85.6178 17.0392C85.3978 16.8846 85.2278 16.6699 85.1268 16.4209C84.9118 15.9206 84.9329 15.3589 84.8129 14.8326C84.7629 14.572 84.6569 14.3254 84.5009 14.1105C84.3469 13.909 84.1229 13.772 83.8739 13.7258C83.6379 13.6691 83.3688 13.6597 83.1158 13.6101C82.8588 13.5704 82.6238 13.4447 82.4478 13.2538C82.2988 13.0621 82.1959 12.8383 82.1479 12.6001C82.0919 12.3759 82.0589 12.1564 82.0139 11.9511C81.9709 11.7542 81.9039 11.5633 81.8159 11.3823C81.7279 11.2188 81.6219 11.0659 81.4989 10.9268C81.1209 10.5031 80.6089 10.2222 80.0479 10.1315C79.8399 10.1097 79.6309 10.105 79.4229 10.1173C79.6289 10.0664 79.8439 10.0552 80.0549 10.0843C80.6359 10.1581 81.1719 10.4357 81.5679 10.8678C81.6989 11.0108 81.8108 11.1693 81.9028 11.3398C81.9988 11.5267 82.0708 11.7249 82.1178 11.9298C82.1648 12.1375 82.1999 12.357 82.2569 12.5717C82.3029 12.7927 82.3989 13.0002 82.5379 13.1783C82.6969 13.3513 82.9108 13.4632 83.1438 13.4945C83.3798 13.5417 83.6419 13.5488 83.9039 13.6078C84.1849 13.6587 84.4368 13.8107 84.6118 14.0349C84.7778 14.2641 84.8929 14.5266 84.9469 14.8043C85.0699 15.3542 85.0508 15.9041 85.2518 16.3737C85.3428 16.6027 85.4988 16.8002 85.6998 16.9425C85.9008 17.0778 86.1149 17.1939 86.3369 17.2894C86.5549 17.3854 86.7599 17.5074 86.9489 17.6528C87.1259 17.801 87.2579 17.9966 87.3289 18.2169C87.4319 18.6067 87.4468 19.0148 87.3708 19.411C87.3138 19.7293 87.2938 20.0533 87.3118 20.3763C87.3298 20.6174 87.4109 20.8495 87.5479 21.0489C87.6639 21.219 87.8319 21.3466 88.0269 21.4123Z\",\n    fill: \"#455A64\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.7898 12.0194C66.8318 12.0386 66.8718 12.0641 66.9078 12.095L67.2378 12.331C67.6408 12.6094 68.0778 12.8354 68.5378 13.0036C69.2168 13.2585 69.9618 13.2736 70.6508 13.0461C71.0498 12.9067 71.3998 12.655 71.6608 12.3215C71.9258 11.9497 72.1568 11.5548 72.3518 11.1415C72.5588 10.7088 72.8478 10.3208 73.2038 9.99934C73.5378 9.71374 73.9218 9.49215 74.3368 9.34565C75.0398 9.10375 75.7938 9.04845 76.5248 9.18515C77.0128 9.27055 77.4888 9.41805 77.9408 9.62405C78.1008 9.69485 78.2208 9.75625 78.3018 9.80105C78.3438 9.82095 78.3848 9.84544 78.4218 9.87424C78.3768 9.86314 78.3328 9.84655 78.2918 9.82465C78.2068 9.78695 78.0848 9.73265 77.9218 9.66655C77.4658 9.48125 76.9908 9.34825 76.5058 9.27005C75.7938 9.15095 75.0628 9.21345 74.3818 9.45185C73.9818 9.59615 73.6118 9.81215 73.2888 10.089C72.9498 10.3965 72.6748 10.7668 72.4768 11.1793C72.2798 11.6029 72.0428 12.0067 71.7688 12.3852C71.4908 12.7359 71.1148 12.9962 70.6878 13.1334C69.9758 13.3654 69.2048 13.3421 68.5078 13.0673C68.0448 12.891 67.6078 12.6528 67.2098 12.3593C67.0678 12.2554 66.9738 12.1705 66.8928 12.1233C66.8548 12.0925 66.8198 12.0577 66.7898 12.0194Z\",\n    fill: \"#455A64\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.7938 15.5241C65.8078 15.5075 65.9887 15.668 66.3147 15.8686C66.7427 16.128 67.2097 16.3176 67.6977 16.4303C68.1867 16.5392 68.6887 16.5686 69.1867 16.5176C69.5697 16.4775 69.8007 16.4114 69.8077 16.4327C69.8147 16.4539 69.7538 16.4633 69.6498 16.4987C69.5028 16.5456 69.3518 16.5803 69.1988 16.6026C68.6908 16.682 68.1717 16.6644 67.6697 16.5507C67.1687 16.4368 66.6928 16.2303 66.2678 15.9418C66.1398 15.8548 66.0187 15.7577 65.9067 15.6515C65.8267 15.576 65.7868 15.5311 65.7938 15.5241Z\",\n    fill: \"#455A64\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.0118 17.7308C68.0258 17.6977 68.4268 17.8629 68.9558 17.9479C69.4848 18.0329 69.8998 18.014 69.9138 18.0494C69.2668 18.1826 68.5938 18.069 68.0258 17.7308H68.0118Z\",\n    fill: \"#455A64\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.4668 31.9073L66.8908 33.9935L58.7158 39.8935L60.8968 43.6225L99.4378 43.6885C99.4378 43.6885 98.0218 38.5365 97.5708 36.9555C96.8748 34.5695 95.9308 33.8875 95.0688 33.0235C94.6678 32.6663 94.2008 32.3913 93.6938 32.2141C92.1688 31.8813 85.1148 30.2978 83.7408 30.3261C83.7408 30.3261 82.1578 33.5995 78.8398 33.5665C75.5218 33.5335 74.4668 31.9073 74.4668 31.9073Z\",\n    fill: \"#EBCEFD\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M90.0867 37.9554C90.1107 37.9554 90.1817 37.6445 90.4057 37.1795C90.7057 36.5765 91.0997 36.0244 91.5737 35.5464C92.0537 35.0684 92.5647 34.6244 93.1057 34.2174C93.3357 34.0554 93.5547 33.8774 93.7597 33.6844C93.5097 33.8134 93.2727 33.9665 93.0517 34.1395C92.4877 34.5255 91.9607 34.9644 91.4797 35.4494C90.9927 35.9374 90.6007 36.5095 90.3207 37.1395C90.2367 37.3295 90.1717 37.5274 90.1247 37.7294C90.0987 37.8014 90.0857 37.8784 90.0867 37.9554Z\",\n    fill: \"#263238\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.0678 42.0485C67.1018 41.7825 67.1108 41.5155 67.0938 41.2485C67.0938 40.7525 67.0608 40.0685 67.0038 39.3175C66.9478 38.5675 66.8698 37.8825 66.7988 37.3945C66.7758 37.1275 66.7268 36.8635 66.6528 36.6055C66.6478 36.8735 66.6648 37.1415 66.7018 37.4065C66.7468 37.9415 66.8038 38.6005 66.8648 39.3275C66.9258 40.0535 66.9588 40.7145 66.9948 41.2505C66.9978 41.5175 67.0218 41.7845 67.0678 42.0485Z\",\n    fill: \"#263238\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M64.7977 43.0294C65.4207 42.8434 66.0557 42.6074 66.5177 42.1524C66.9807 41.6964 67.2258 40.9724 66.9518 40.3724C67.4118 41.3474 68.1427 42.1684 69.0587 42.7364C69.9737 43.3054 71.0337 43.5974 72.1107 43.5774L62.9688 43.6934C63.5477 43.3964 64.1627 43.1734 64.7977 43.0294Z\",\n    fill: \"black\"\n  }))), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.915 43.6765C107.915 43.6765 106.99 42.4185 106.532 42.1805C106.074 41.9415 105.449 41.9445 105.173 42.1945L104.896 42.4425C104.896 42.4425 103.457 41.7985 102.772 42.2935C102.772 42.2935 101.404 41.6465 100.75 42.3885C100.75 42.3885 99.6948 41.7015 99.2488 42.3005C98.8028 42.9005 98.8478 43.9105 99.0628 44.4245C99.2768 44.9395 99.6828 46.7205 100.007 46.7515C100.007 46.7515 100.847 46.8415 100.951 46.3855C101.054 45.9305 101.111 45.7135 101.111 45.7135C101.111 45.7135 101.432 47.3205 101.819 47.4005C102.206 47.4805 102.945 47.4385 102.968 46.7325C102.968 46.7325 103.327 47.2635 103.676 47.1105C104.026 46.9565 104.46 46.6975 104.422 46.2605C104.384 45.8245 104.377 45.3875 104.377 45.3875C104.377 45.3875 104.571 46.0245 104.887 45.8855C105.203 45.7465 105.524 45.7765 105.704 45.2385C105.883 44.7005 106.324 43.6695 106.324 43.6695L107.915 43.6765Z\",\n    fill: \"#FFBE9D\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.401 45.3594C104.364 45.2054 104.318 45.0544 104.264 44.9064C104.166 44.5424 104.151 44.1624 104.219 43.7924C104.288 43.4214 104.439 43.0724 104.66 42.7684C104.83 42.5324 104.967 42.4094 104.953 42.3924C104.939 42.3764 104.781 42.4774 104.583 42.7064C104.326 43.0094 104.152 43.3744 104.08 43.7654C104.008 44.1564 104.038 44.5594 104.17 44.9344C104.211 45.0924 104.29 45.2384 104.401 45.3594Z\",\n    fill: \"#EB996E\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M102.676 42.3035C102.583 42.5035 102.521 42.7165 102.492 42.9355C102.291 43.9885 102.364 45.0745 102.704 46.0905C102.763 46.3035 102.853 46.5065 102.971 46.6925C103.016 46.6785 102.612 45.7485 102.534 44.5165C102.456 43.2845 102.721 42.3105 102.676 42.3035Z\",\n    fill: \"#EB996E\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.71 42.4094C100.607 42.9704 100.6 43.5444 100.689 44.1084C100.732 44.6774 100.869 45.2354 101.095 45.7604C101.135 45.7604 100.932 45.0174 100.828 44.0914C100.724 43.1664 100.75 42.4114 100.71 42.4094Z\",\n    fill: \"#EB996E\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.0478 42.7705C95.0828 42.6975 95.1328 42.6325 95.1958 42.5825C95.2588 42.5315 95.3328 42.4955 95.4118 42.4775C95.5948 42.4365 95.7858 42.4405 95.9668 42.4885C96.1488 42.5375 96.3158 42.6295 96.4548 42.7565C96.7548 43.0305 97.0118 43.3485 97.2168 43.7005L95.1778 43.6865C95.1968 43.3695 94.9348 43.0605 95.0478 42.7705Z\",\n    fill: \"#FFBE9D\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.3738 44.2264C43.4358 43.6034 43.6408 43.0024 43.9718 42.4704C44.3028 41.9384 44.7508 41.4894 45.2828 41.1584C45.7058 40.9094 46.1788 40.7554 46.6678 40.7064C47.1568 40.6584 47.6508 40.7164 48.1148 40.8774L52.0488 42.2464C52.2608 42.4824 58.7538 39.9714 58.7538 39.9714L60.9318 43.6954L48.5228 43.6764C49.2048 44.4544 49.9278 45.1964 50.6898 45.8974L51.5318 48.6964L51.4498 51.2284C51.0038 51.4334 50.3378 50.6524 50.3378 50.6524L49.9488 51.3604L50.0778 52.0474C50.0778 52.0474 51.2248 54.8324 51.1848 55.4524C51.1848 55.4994 51.1758 55.5464 51.1578 55.5894C51.1388 55.6334 51.1128 55.6724 51.0788 55.7044C51.0448 55.7374 51.0048 55.7634 50.9618 55.7804C50.9178 55.7974 50.8708 55.8054 50.8238 55.8044C50.6588 55.8134 50.4958 55.7734 50.3538 55.6894C50.2118 55.6054 50.0978 55.4814 50.0258 55.3324L48.3958 52.1634C48.3958 52.1634 47.1328 51.8564 46.6918 51.4404C46.2498 51.0254 45.5918 50.2324 45.5918 50.2324L44.7898 50.1194C44.6938 50.1334 44.5968 50.1134 44.5138 50.0654C44.3018 49.9604 44.1188 49.8074 43.9778 49.6194C43.8368 49.4304 43.7418 49.2114 43.7018 48.9794L43.2928 46.8554C43.1938 46.3744 43.2718 45.2504 43.3738 44.2264Z\",\n    fill: \"#FFBE9D\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.0688 49.7415C47.2968 50.6605 47.7589 51.5045 48.4099 52.1915C48.4409 52.1675 48.0649 51.6655 47.7019 50.9905C47.3379 50.3155 47.1048 49.7295 47.0688 49.7415Z\",\n    fill: \"#EB996E\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1768 49.5104C45.1338 49.5274 45.2828 49.8554 45.5378 50.1994C45.6728 50.4224 45.8468 50.6194 46.0518 50.7804C45.9508 50.5404 45.8138 50.3184 45.6438 50.1214C45.5048 49.9054 45.3488 49.7014 45.1768 49.5104Z\",\n    fill: \"#EB996E\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3378 52.6915C50.2798 52.4295 50.2058 52.1715 50.1158 51.9175C49.9718 51.4455 49.7858 50.7825 49.6038 50.0485C49.5118 49.6805 49.4288 49.3405 49.3678 49.0105C49.2938 48.7345 49.2658 48.4485 49.2828 48.1625C49.3108 47.9025 49.4158 47.6565 49.5828 47.4545C49.5828 47.4545 49.5068 47.4885 49.4178 47.5985C49.2918 47.7605 49.2108 47.9525 49.1818 48.1555C49.1488 48.4525 49.1688 48.7515 49.2408 49.0405C49.3038 49.3645 49.3848 49.7155 49.4768 50.0865C49.6608 50.8225 49.8608 51.4815 50.0288 51.9505C50.1068 52.2075 50.2108 52.4555 50.3378 52.6915Z\",\n    fill: \"#EB996E\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4858 47.9855C49.4688 48.0005 49.6038 48.1535 49.7598 48.4345C49.9618 48.7975 50.0818 49.2005 50.1108 49.6145C50.1078 49.8515 50.1268 50.0885 50.1698 50.3225C50.2168 50.5195 50.3208 50.6975 50.4678 50.8365C50.5878 50.9715 50.7398 51.0745 50.9088 51.1365C50.9228 51.1175 50.7488 51.0065 50.5358 50.7735C50.4128 50.6405 50.3278 50.4775 50.2878 50.3015C50.2538 50.0735 50.2388 49.8425 50.2438 49.6125C50.2138 49.1775 50.0748 48.7565 49.8398 48.3895C49.7528 48.2305 49.6318 48.0935 49.4858 47.9855Z\",\n    fill: \"#EB996E\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.5607 43.7124C48.5837 43.6814 48.1237 43.2994 47.6587 42.7304C47.1937 42.1614 46.8967 41.6374 46.8547 41.6724C46.8937 41.7974 46.9487 41.9164 47.0167 42.0264C47.1727 42.3054 47.3537 42.5694 47.5577 42.8154C47.8277 43.1784 48.1697 43.4834 48.5607 43.7124Z\",\n    fill: \"#EB996E\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.3\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M89.3838 43.6784L89.5378 40.1224L87.0408 43.6744L89.3838 43.6784Z\",\n    fill: \"black\"\n  }))), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.3818 43.6764C89.3608 42.9744 89.3798 42.2714 89.4378 41.5714C89.4568 40.8694 89.5158 40.1684 89.6148 39.4734C89.6388 40.1754 89.6208 40.8784 89.5608 41.5784C89.5438 42.2804 89.4838 42.9814 89.3818 43.6764Z\",\n    fill: \"#263238\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.6199 31.2607C88.6559 31.3343 88.6779 31.4145 88.6829 31.4967C88.7019 31.7286 88.6409 31.9598 88.5109 32.1526C88.3119 32.4649 88.0029 32.6914 87.6449 32.7875C87.1819 32.9007 86.7039 32.9413 86.2289 32.9078C85.9539 32.9024 85.6799 32.9166 85.4079 32.9504C85.1159 32.9864 84.8369 33.0864 84.5889 33.2434C84.3309 33.4204 84.1279 33.6654 84.0009 33.9514C83.8669 34.2594 83.7659 34.5814 83.6989 34.9114C83.6229 35.2514 83.5549 35.6034 83.4459 35.9594C83.2799 36.5314 82.9409 37.0374 82.4769 37.4104C82.0119 37.7834 81.4449 38.0044 80.8499 38.0434C80.4469 38.0644 80.0429 38.0054 79.6619 37.8694C79.2819 37.7334 78.9319 37.5244 78.6319 37.2524C78.3519 36.9964 78.1179 36.6945 77.9379 36.3605C77.7859 36.0455 77.5519 35.7774 77.2609 35.5844C76.9659 35.4304 76.6319 35.3725 76.3029 35.4165C75.9849 35.4515 75.6699 35.5044 75.3589 35.5774C75.0639 35.6464 74.7619 35.6874 74.4599 35.6994C74.1769 35.7064 73.8949 35.6614 73.6289 35.5674C73.1739 35.4074 72.7679 35.1354 72.4489 34.7744C72.2039 34.5054 72.0159 34.1905 71.8939 33.8475C71.8479 33.7235 71.8129 33.5964 71.7879 33.4674C71.7759 33.3514 71.7569 33.2575 71.7569 33.1795V32.9995C71.7549 32.9805 71.7549 32.9604 71.7569 32.9409C71.7679 33.2454 71.8279 33.5454 71.9339 33.8304C72.0609 34.1634 72.2519 34.4684 72.4959 34.7274C72.8129 35.0754 73.2149 35.3365 73.6619 35.4855C73.9189 35.5725 74.1899 35.6134 74.4619 35.6054C74.7589 35.5904 75.0529 35.5474 75.3419 35.4774C75.6529 35.4034 75.9689 35.3464 76.2859 35.3084C76.6369 35.2604 76.9939 35.3225 77.3079 35.4855C77.6179 35.6865 77.8669 35.9674 78.0299 36.2994C78.2059 36.6224 78.4339 36.9144 78.7049 37.1634C79.2859 37.6854 80.0489 37.9574 80.8289 37.9204C81.2129 37.8914 81.5869 37.7854 81.9289 37.6084C82.2709 37.4304 82.5739 37.1865 82.8189 36.8895C83.3069 36.3115 83.4229 35.5604 83.5809 34.8854C83.6489 34.5474 83.7549 34.2175 83.8949 33.9015C84.0319 33.5985 84.2489 33.3395 84.5229 33.1515C84.7839 32.9875 85.0799 32.884 85.3859 32.8488C85.6629 32.8171 85.9409 32.8061 86.2189 32.8158C86.6939 32.8533 87.1709 32.82 87.6349 32.7168C87.9809 32.6279 88.2809 32.4153 88.4799 32.1196C88.6099 31.936 88.6759 31.7144 88.6669 31.4895C88.6559 31.4122 88.6399 31.3358 88.6199 31.2607Z\",\n    fill: \"#5A13A0\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.1428 43.4215C77.1198 43.3705 77.1038 43.3165 77.0928 43.2615L76.9638 42.7895C76.8148 42.2165 76.5758 41.6705 76.2558 41.1725C76.1468 41.0125 76.0208 40.8645 75.8798 40.7315C75.7268 40.5895 75.5538 40.4695 75.3678 40.3745C74.9478 40.1795 74.4838 40.0975 74.0228 40.1385C73.5068 40.1845 72.9968 40.2745 72.4958 40.4055C71.9508 40.5505 71.3888 40.6235 70.8248 40.6225C70.2448 40.6325 69.6828 40.4225 69.2508 40.0355C68.8818 39.6415 68.6618 39.1315 68.6278 38.5935C68.5938 38.1215 68.6048 37.6475 68.6608 37.1775C68.7068 36.7725 68.7168 36.3635 68.6918 35.9575C68.6768 35.6635 68.6048 35.3765 68.4778 35.1115C68.3518 34.8465 68.1738 34.6095 67.9548 34.4135C67.7858 34.2805 67.5918 34.1825 67.3838 34.1235H67.4268C67.4688 34.1275 67.5108 34.1365 67.5518 34.1495C67.7088 34.1965 67.8558 34.2715 67.9858 34.3715C68.2168 34.5665 68.4068 34.8055 68.5428 35.0765C68.6788 35.3465 68.7598 35.6405 68.7788 35.9425C68.8108 36.3545 68.8048 36.7685 68.7628 37.1795C68.7108 37.6445 68.7038 38.1125 68.7408 38.5795C68.7448 38.8465 68.8028 39.1105 68.9118 39.3545C69.0208 39.5985 69.1788 39.8175 69.3758 39.9985C69.5728 40.1785 69.8048 40.3175 70.0568 40.4055C70.3098 40.4935 70.5768 40.5285 70.8438 40.5095C71.4018 40.5125 71.9568 40.4405 72.4958 40.2975C73.0028 40.1655 73.5198 40.0785 74.0418 40.0355C74.5228 39.9975 75.0058 40.0865 75.4408 40.2945C75.6348 40.3965 75.8138 40.5245 75.9718 40.6745C76.1158 40.8185 76.2438 40.9765 76.3548 41.1465C76.6698 41.6555 76.8968 42.2145 77.0268 42.7985C77.0788 43.0015 77.1118 43.1625 77.1328 43.2705C77.1408 43.3205 77.1438 43.3715 77.1428 43.4215Z\",\n    fill: \"#5A13A0\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.6718 40.4085C89.3428 40.2405 88.9968 40.1085 88.6408 40.0135C88.2548 39.9225 87.8558 39.8925 87.4608 39.9265C86.9758 39.9695 86.5058 40.1135 86.0798 40.3495C85.6538 40.5875 85.2788 40.9085 84.9778 41.2935C84.7308 41.6045 84.5398 41.9565 84.4138 42.3335C84.3248 42.5865 84.3068 42.8575 84.3618 43.1195C84.3898 43.2135 84.4238 43.3065 84.4638 43.3955C84.4638 43.3955 84.4418 43.3765 84.4118 43.3365C84.3708 43.2725 84.3378 43.2035 84.3148 43.1315C84.2398 42.8625 84.2448 42.5765 84.3288 42.3105C84.4478 41.9175 84.6378 41.5495 84.8878 41.2245C85.1938 40.8255 85.5788 40.4925 86.0188 40.2475C86.4598 40.0025 86.9478 39.8565 87.4508 39.8185C87.8588 39.7885 88.2688 39.8275 88.6638 39.9335C88.9298 40.0055 89.1858 40.1095 89.4268 40.2425C89.5118 40.2905 89.5728 40.3325 89.6148 40.3605C89.6578 40.3895 89.6738 40.4035 89.6718 40.4085Z\",\n    fill: \"#5A13A0\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92.2158 34.0404C92.2038 34.0404 92.1308 33.9434 92.0718 33.7484C91.9988 33.4924 91.9878 33.2234 92.0388 32.9624C92.0898 32.7001 92.2018 32.4537 92.3648 32.2423C92.4918 32.0842 92.6008 32.0063 92.6008 32.0252C92.3748 32.3031 92.2208 32.6324 92.1528 32.9844C92.0848 33.3354 92.1038 33.6984 92.2088 34.0404H92.2158Z\",\n    fill: \"#5A13A0\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M97.9839 38.7184C97.9799 38.7534 97.9709 38.7885 97.9579 38.8225C97.9299 38.9195 97.8939 39.0144 97.8499 39.1054C97.6869 39.4444 97.4558 39.7465 97.1718 39.9925C96.7488 40.3625 96.2279 40.6015 95.6709 40.6795C95.0339 40.7735 94.3519 40.5704 93.6679 40.4004C93.3359 40.3104 92.9939 40.2574 92.6499 40.2454C92.3299 40.2404 92.0109 40.2895 91.7059 40.3915C91.1929 40.5655 90.7318 40.8675 90.3658 41.2675C90.1168 41.5355 89.9179 41.8465 89.7779 42.1855C89.6789 42.4215 89.6529 42.5694 89.6389 42.5674C89.6369 42.5314 89.6419 42.4955 89.6529 42.4615C89.6729 42.3615 89.6999 42.2645 89.7329 42.1685C89.8599 41.8155 90.0519 41.4895 90.2999 41.2085C90.6699 40.7875 91.1429 40.4695 91.6709 40.2825C91.9839 40.1745 92.3138 40.1205 92.6458 40.1245C92.9978 40.1375 93.3479 40.1895 93.6889 40.2805C94.3799 40.4525 95.0429 40.6534 95.6499 40.5664C96.1869 40.4964 96.6939 40.2744 97.1079 39.9264C97.3899 39.6924 97.6249 39.4065 97.7999 39.0845C97.9389 38.8575 97.9839 38.7134 97.9839 38.7184Z\",\n    fill: \"#5A13A0\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.4308 43.0294C66.4028 43.0334 66.3759 43.0334 66.3479 43.0294C66.2699 43.0374 66.1908 43.0374 66.1118 43.0294C65.8168 43.0104 65.5288 42.9354 65.2628 42.8084C64.8638 42.6194 64.5218 42.3284 64.2708 41.9654C64.1258 41.7484 64.0158 41.5094 63.9478 41.2574C63.8838 40.9894 63.8379 40.7174 63.8089 40.4434C63.7449 39.8914 63.6549 39.3534 63.3369 38.9924C63.0489 38.6824 62.6649 38.4814 62.2469 38.4204C61.9629 38.3714 61.6768 38.3414 61.3898 38.3334C61.2828 38.3354 61.1748 38.3284 61.0688 38.3144C61.1738 38.2914 61.2818 38.2824 61.3898 38.2864C61.6818 38.2754 61.9738 38.2914 62.2628 38.3354C62.7058 38.3884 63.1158 38.5944 63.4218 38.9184C63.5898 39.1214 63.7118 39.3594 63.7778 39.6154C63.8468 39.8814 63.8948 40.1524 63.9218 40.4264C63.9508 40.6954 63.9959 40.9614 64.0569 41.2244C64.1189 41.4644 64.2209 41.6934 64.3589 41.8994C64.5969 42.2524 64.9219 42.5374 65.3029 42.7274C65.6549 42.9034 66.0378 43.0054 66.4308 43.0294Z\",\n    fill: \"#5A13A0\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.2128 83.1734C76.5688 83.8344 76.8009 84.5535 76.8999 85.2975H78.1599L83.4769 85.2054L83.4368 85.2995C83.4368 85.2995 84.3049 81.2215 84.4639 80.0085C84.5929 79.0085 85.2119 76.6154 84.4639 75.5574C84.3289 75.3714 84.1389 75.2324 83.9209 75.1604C83.7029 75.0874 83.4679 75.0844 83.2479 75.1514C83.0949 75.1954 82.9559 75.2814 82.8479 75.3994C82.7399 75.5174 82.6669 75.6624 82.6369 75.8194C82.6369 75.8194 82.5728 74.4034 81.5578 74.3844C80.5438 74.3654 80.5079 75.1564 80.5079 75.1564C80.5079 75.1564 80.2299 73.5394 79.0919 73.5544C78.8739 73.5744 78.6669 73.6604 78.4979 73.8004C78.3299 73.9414 78.2079 74.1295 78.1479 74.3405V71.2724C78.1489 70.9724 78.0359 70.6834 77.8309 70.4644C77.6269 70.2454 77.3469 70.1125 77.0479 70.0925C76.8969 70.0875 76.7448 70.1124 76.6028 70.1674C76.4608 70.2214 76.3319 70.3034 76.2219 70.4084C76.1119 70.5134 76.0239 70.6394 75.9639 70.7784C75.9029 70.9184 75.8708 71.0684 75.8678 71.2204L75.7999 78.3184L74.0748 76.1055C73.6238 75.5315 72.5479 75.8154 72.4229 76.3084C72.4229 76.3084 72.1108 76.9575 72.7558 77.9135C73.2038 78.6285 76.2128 83.1734 76.2128 83.1734Z\",\n    fill: \"#EBEBEB\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.2128 83.1734C76.2128 83.1734 76.1818 83.1354 76.1298 83.0604L75.8938 82.7204L75.0088 81.4014L73.6098 79.3055L72.7368 77.9935C72.5658 77.7565 72.4358 77.4925 72.3518 77.2125C72.2528 76.9125 72.2528 76.5884 72.3518 76.2894C72.4228 76.1114 72.5578 75.9665 72.7318 75.8855C72.9048 75.7985 73.0948 75.7504 73.2888 75.7444C73.4898 75.7324 73.6898 75.7795 73.8648 75.8785C73.9088 75.9055 73.9498 75.9354 73.9898 75.9684C74.0278 76.0034 74.0628 76.0435 74.0958 76.0815L74.2798 76.3174L75.8208 78.2885L75.7288 78.3185C75.7528 76.3365 75.7788 74.1625 75.8048 71.8505V71.4155C75.7988 71.2655 75.8088 71.1155 75.8348 70.9675C75.9038 70.6605 76.0888 70.3925 76.3518 70.2195C76.4848 70.1335 76.6328 70.0745 76.7888 70.0475C76.9448 70.0195 77.1038 70.0234 77.2578 70.0584C77.4118 70.0934 77.5578 70.1594 77.6858 70.2524C77.8138 70.3444 77.9218 70.4614 78.0038 70.5974C78.0898 70.7334 78.1478 70.8844 78.1768 71.0434C78.1978 71.1994 78.2058 71.3574 78.1998 71.5154V74.3304L78.0798 74.3145C78.1628 74.0305 78.3488 73.7894 78.6008 73.6364C78.7088 73.5744 78.8248 73.5294 78.9458 73.5024C79.0078 73.4884 79.0708 73.4835 79.1348 73.4885C79.1958 73.4915 79.2578 73.4984 79.3188 73.5094C79.5598 73.5624 79.7798 73.6885 79.9468 73.8705C80.2528 74.2315 80.4578 74.6685 80.5388 75.1355H80.4188C80.4328 74.9785 80.4898 74.8285 80.5818 74.7005C80.6738 74.5725 80.7978 74.4724 80.9418 74.4084C81.0818 74.3494 81.2318 74.3155 81.3838 74.3095C81.4618 74.3015 81.5408 74.3015 81.6198 74.3095L81.7328 74.3234L81.8418 74.3564C81.9828 74.4084 82.1118 74.4894 82.2198 74.5934C82.3288 74.6974 82.4138 74.8235 82.4718 74.9635C82.5908 75.2265 82.6618 75.5084 82.6818 75.7964L82.5638 75.7845C82.5958 75.6325 82.6638 75.4904 82.7638 75.3714C82.8638 75.2524 82.9908 75.1604 83.1348 75.1024C83.4198 74.9914 83.7368 74.9984 84.0178 75.1214C84.1558 75.1794 84.2808 75.2654 84.3858 75.3734C84.4798 75.4834 84.5598 75.6054 84.6218 75.7374C84.7338 75.9994 84.8068 76.2764 84.8358 76.5604C84.9378 77.6814 84.6968 78.7465 84.5338 79.7535C84.3718 80.7615 84.1898 81.7434 84.0078 82.6664C83.8258 83.5884 83.6348 84.4625 83.4628 85.2885L83.3778 85.2625L83.4158 85.1675L83.4578 85.2294L78.1408 85.3064L78.1688 85.2764V85.3064H78.1598H76.8928H76.8708V85.2854C76.7988 84.7394 76.6558 84.2045 76.4468 83.6955C76.3758 83.5205 76.3138 83.3905 76.2698 83.3035C76.2248 83.2155 76.2078 83.1714 76.2078 83.1714C76.3078 83.3364 76.3948 83.5084 76.4698 83.6854C76.6908 84.1944 76.8418 84.7314 76.9188 85.2804L76.8948 85.2594H78.1618L78.1318 85.2905V85.2625H78.1598L83.4748 85.1534H83.5428L83.5168 85.2175L83.4788 85.3114L83.3938 85.2854C83.5628 84.4594 83.7408 83.5845 83.9278 82.6615C84.1068 81.7385 84.3048 80.7735 84.4448 79.7535C84.5838 78.7345 84.8408 77.6814 84.7398 76.5894C84.7118 76.3184 84.6418 76.0535 84.5338 75.8035C84.4718 75.6815 84.3918 75.5694 84.2978 75.4704C84.2048 75.3724 84.0928 75.2925 83.9698 75.2345C83.7178 75.1255 83.4328 75.1204 83.1768 75.2204C83.0498 75.2694 82.9368 75.3504 82.8498 75.4554C82.7618 75.5604 82.7028 75.6854 82.6768 75.8194L82.5918 76.2274L82.5588 75.8075C82.5388 75.5365 82.4718 75.2704 82.3608 75.0224C82.3098 74.8974 82.2338 74.7845 82.1378 74.6915C82.0418 74.5975 81.9268 74.5244 81.8008 74.4764C81.5368 74.4034 81.2558 74.4204 81.0008 74.5244C80.8778 74.5784 80.7708 74.6645 80.6918 74.7735C80.6128 74.8825 80.5638 75.0105 80.5508 75.1445L80.5128 75.5434L80.4278 75.1514C80.3498 74.7084 80.1558 74.2945 79.8658 73.9505C79.7238 73.7815 79.5268 73.6675 79.3088 73.6285C79.0908 73.5895 78.8668 73.6285 78.6738 73.7385C78.4458 73.8735 78.2778 74.0905 78.2018 74.3445L78.0818 74.7175V71.5105C78.0888 71.3605 78.0828 71.2104 78.0628 71.0614C78.0358 70.9184 77.9818 70.7814 77.9048 70.6584C77.8298 70.5354 77.7308 70.4294 77.6138 70.3454C77.4978 70.2614 77.3648 70.2005 77.2248 70.1675C76.9458 70.1085 76.6548 70.1615 76.4148 70.3165C76.1758 70.4705 76.0058 70.7125 75.9438 70.9915C75.9188 71.1305 75.9088 71.2725 75.9158 71.4135V71.8505C75.8848 74.1605 75.8538 76.3345 75.8258 78.3185V78.4675L75.7358 78.3494L74.2138 76.3815C74.1128 76.2195 73.9808 76.0784 73.8268 75.9664C73.6668 75.8754 73.4838 75.8325 73.3008 75.8405C73.1208 75.8475 72.9448 75.8914 72.7838 75.9704C72.6288 76.0414 72.5068 76.1685 72.4438 76.3275C72.3518 76.6075 72.3518 76.9104 72.4438 77.1904C72.5248 77.4624 72.6498 77.7195 72.8148 77.9505L73.6808 79.2674L75.0608 81.3754L75.9268 82.7065C76.0238 82.8575 76.0968 82.9725 76.1518 83.0535C76.2058 83.1335 76.2128 83.1734 76.2128 83.1734Z\",\n    fill: \"#263238\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M83.5528 85.2054H76.8948C76.3888 85.2054 75.9788 85.6154 75.9788 86.1214V86.1875C75.9788 86.6925 76.3888 87.1024 76.8948 87.1024H83.5528C84.0578 87.1024 84.4678 86.6925 84.4678 86.1875V86.1214C84.4678 85.6154 84.0578 85.2054 83.5528 85.2054Z\",\n    fill: \"#EBEBEB\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M83.5547 87.1024C83.5547 87.1024 83.6207 87.1024 83.7437 87.0694C83.9247 87.0254 84.0887 86.9284 84.2157 86.7914C84.3027 86.6934 84.3677 86.5784 84.4067 86.4534C84.4477 86.3004 84.4567 86.1394 84.4327 85.9814C84.4027 85.7964 84.3137 85.6244 84.1787 85.4924C84.0447 85.3614 83.8707 85.2764 83.6847 85.2504H76.9037C76.7507 85.2514 76.5997 85.2934 76.4677 85.3714C76.3357 85.4504 76.2267 85.5624 76.1517 85.6964C76.0817 85.8294 76.0467 85.9774 76.0477 86.1284C76.0387 86.3474 76.1137 86.5625 76.2577 86.7285C76.4017 86.8945 76.6027 87.0004 76.8217 87.0224C77.1117 87.0224 77.4137 87.0224 77.6967 87.0224L80.7487 87.0365L82.8067 87.0555L83.3657 87.0674C83.4317 87.0644 83.4967 87.0685 83.5617 87.0795C83.4967 87.0895 83.4317 87.0934 83.3657 87.0914H82.8067L80.7487 87.1104L77.6967 87.1245C77.4097 87.1245 77.1217 87.1245 76.8097 87.1245C76.6467 87.1085 76.4907 87.0514 76.3547 86.9594C76.2197 86.8674 76.1087 86.7434 76.0337 86.5974C75.9517 86.4454 75.9107 86.2744 75.9137 86.1014C75.9167 85.9284 75.9647 85.7594 76.0517 85.6104C76.1397 85.4614 76.2637 85.3375 76.4127 85.2495C76.5617 85.1625 76.7317 85.1145 76.9037 85.1115C79.5567 85.1115 81.9477 85.1114 83.6967 85.1414C83.8997 85.1704 84.0877 85.2654 84.2327 85.4104C84.3777 85.5564 84.4707 85.7454 84.4987 85.9484C84.5207 86.1124 84.5087 86.2785 84.4637 86.4375C84.4187 86.5695 84.3457 86.6904 84.2487 86.7914C84.1177 86.9304 83.9457 87.0254 83.7577 87.0604C83.6927 87.0854 83.6237 87.0994 83.5547 87.1024Z\",\n    fill: \"#263238\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.1108 76.9334C78.0288 76.0194 78.0288 75.0984 78.1108 74.1844C78.1928 75.0984 78.1928 76.0194 78.1108 76.9334Z\",\n    fill: \"#263238\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.4778 76.7475C80.3958 76.2055 80.3958 75.6535 80.4778 75.1115C80.5598 75.6535 80.5598 76.2055 80.4778 76.7475Z\",\n    fill: \"#263238\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.6438 77.4365C82.5588 76.8935 82.5588 76.3415 82.6438 75.7985C82.7268 76.3415 82.7268 76.8935 82.6438 77.4365Z\",\n    fill: \"#263238\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.3938 69.9764C74.9448 69.8164 74.5108 69.6174 74.0958 69.3844C73.6618 69.1844 73.2458 68.9475 72.8518 68.6765C73.7348 69.0355 74.5848 69.4704 75.3938 69.9744V69.9764Z\",\n    fill: \"#263238\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.5458 69.3275C76.3918 68.7365 76.2778 68.1354 76.2038 67.5294C76.0878 66.9284 76.0128 66.3204 75.9788 65.7094C76.1358 66.3004 76.2508 66.9025 76.3238 67.5105C76.4378 68.1105 76.5118 68.7175 76.5458 69.3275Z\",\n    fill: \"#263238\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.9778 69.4925C78.2118 69.0555 78.4798 68.6365 78.7808 68.2415C79.0478 67.8245 79.3498 67.4295 79.6818 67.0615C79.1828 67.9185 78.6128 68.7325 77.9778 69.4945V69.4925Z\",\n    fill: \"#263238\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubscribe);\nexport default __webpack_public_path__ + \"static/media/subscribe.4e02a43a1cd257999ccfa432021a8ce4.svg\";\nexport { ForwardRef as ReactComponent };","import subscribeImage from '../assets/subscribe.svg';\r\nimport bookAdImage from '../assets/book-ad.png';\r\nimport { XIcon } from '@heroicons/react/outline'\r\nimport { MajarraButton } from './button';\r\n\r\nexport function AdsCanvas() {\r\n\r\n    return (\r\n        <BookAd />\r\n    );\r\n}\r\nexport function BookAd() {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"py-12 border-1 border-slate-200\">\r\n\r\n\r\n                <div className=\"relative flex flex-col items-center rounded max-w-[max-content] mx-auto bg-[#e8e9ea33]\">\r\n\r\n\r\n                    <div className=\"absolute top-[-34px] left-5 hover:cursor-pointer\">\r\n\r\n                        <p className=\"px-2 py-1 font-bold flex items-center bg-[#F6EBFF] text-[#5A13A0] rounded\">\r\n                            {'إغلاق'}\r\n\r\n                            <XIcon\r\n                                className=\"h-5 w-5 mx-1 cursor-pointer dark:stroke-white\"\r\n                            />\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                    <a\r\n                        href=\"https://google.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                    >\r\n                        <img\r\n                            src={bookAdImage}\r\n                            alt=\"book-ad\"\r\n                        />\r\n                    </a>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport function SubscribeAd({ closeHandler }: { closeHandler: () => void }) {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"py-12 border-1 border-slate-200\">\r\n\r\n\r\n                <div className=\"relative flex flex-col items-center px-5 py-7 border-2 border-[#E8E9EA] rounded max-w-[299px] mx-auto bg-[#fafafa]\">\r\n\r\n\r\n                    <div\r\n                        className=\"absolute top-[-34px] left-5 hover:cursor-pointer\">\r\n\r\n                        <p\r\n                            onClick={closeHandler}\r\n                            className=\"px-2 py-1 font-bold flex items-center bg-[#F6EBFF] text-[#5A13A0] rounded\">\r\n                            {'إغلاق'}\r\n\r\n                            <XIcon\r\n                                className=\"h-5 w-5 mx-1 cursor-pointer dark:stroke-white\"\r\n                            />\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                    <a\r\n                        href=\"https://my.majarra.com/pricing\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                    >\r\n                        <img\r\n                            src={subscribeImage}\r\n                            alt=\"subscribe\"\r\n                            className=\"w-[200px]\"\r\n                        />\r\n                    </a>\r\n\r\n                    <p\r\n                        className=\"my-4 text-center\"\r\n                    >\r\n                        {'اشترك في دقيقة واحدة فقط في مجرة, أنت الآن تقف على أعتاب أفضل محتوى عربي ستجده أبدآ على الإنترنت'}\r\n                    </p>\r\n\r\n\r\n                    <a\r\n                        href=\"https://my.majarra.com/pricing\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        className=\"w-[100%]\"\r\n                    >\r\n                        <MajarraButton\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            className=\"h-[40px]\"\r\n                        >\r\n                            {'أكتشف باقات الاشتراك'}\r\n                        </MajarraButton>\r\n                    </a>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { Alert } from './components/alerts/Alert'\r\nimport { Grid } from './components/grid/Grid'\r\nimport classnames from 'classnames'\r\nimport { Keyboard } from './components/keyboard/Keyboard'\r\nimport { StatsModal } from './components/modals/StatsModal'\r\nimport {\r\n  WIN_MESSAGES,\r\n  GAME_COPIED_MESSAGE,\r\n  NOT_ENOUGH_LETTERS_MESSAGE,\r\n  WORD_NOT_FOUND_MESSAGE,\r\n  CORRECT_WORD_MESSAGE,\r\n  SAME_WORD_ENTERED_BEFORE,\r\n} from './constants/strings'\r\nimport { addStatsForCompletedGame, defaultStats, loadStats } from './lib/stats'\r\nimport {\r\n  GameStats,\r\n  loadGameSolutionAndGuessesFromLocalStorage,\r\n  saveGameSolutionAndGuessesToLocalStorage,\r\n} from './lib/localStorage'\r\nimport { DICTIONARY_TYPES } from './constants/wordlist'\r\nimport {\r\n  genereateSynonymsOfWord,\r\n  getWordOfDay,\r\n  isWinningWord,\r\n  isWordInWordList,\r\n} from './lib/words'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openDialog } from './store/actions/dialogs'\r\nimport { ChangeDictionaryTabs } from './components/dictionaries-types-tabs'\r\nimport { SubscribeAd } from './components/ads'\r\n\r\nconst ALERT_TIME_MS = 2000\r\nconst ADS_OPENED_ON_STARTUP = 'ADS_ON_START'\r\nconst ADS_OPENED_ON_MIDDLE = 'ADS_ON_MIDDLE'\r\nconst ADS_OPENED_ON_END = 'ADS_ON_END'\r\n\r\nfunction isMobile(width: number) {\r\n  return width < 1111\r\n}\r\n\r\nexport default function WordleGame({\r\n  dictionaryType,\r\n}: {\r\n  dictionaryType: DICTIONARY_TYPES\r\n}) {\r\n  const [screenWidth, setScreenWidth] = useState(1200)\r\n\r\n  const [openSubscribeAd_Desktop, setOpenSubscribeAd_Desktop] = useState(false)\r\n  const [openSubscribeAd_Mobile, setOpenSubscribeAd_Mobile] = useState(false)\r\n\r\n  // user current input\r\n  const [currentGuess, setCurrentGuess] = useState('')\r\n\r\n  // mark the game as won or lost\r\n  const [isGameWon, setIsGameWon] = useState(false)\r\n  const [isGameLost, setIsGameLost] = useState(false)\r\n\r\n  // warnings messages\r\n  const [sameWordsEnteredBefore, setSameWordEnteredBefore] = useState(false)\r\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\r\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\r\n  const [successAlert, setSuccessAlert] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const openStatsDialog = useCallback(\r\n    () =>\r\n      dispatch(\r\n        openDialog({\r\n          dialogName: 'stats',\r\n        })\r\n      ),\r\n    []\r\n  )\r\n\r\n  function resetGame() {\r\n    setIsGameLost(false)\r\n    setIsGameWon(false)\r\n  }\r\n\r\n  useEffect(\r\n    function onUnload() {\r\n      setTimeout(() => {\r\n        setIsGameLost(false)\r\n      }, 5000)\r\n\r\n      return resetGame\r\n    },\r\n    [dictionaryType]\r\n  )\r\n\r\n  const { _solution, _solutionIndex, _tomorrow } = useMemo(() => {\r\n    let { solution, solutionIndex, tomorrow } = getWordOfDay(dictionaryType)\r\n\r\n    return {\r\n      _solution: solution,\r\n      _solutionIndex: solutionIndex,\r\n      _tomorrow: tomorrow,\r\n    }\r\n  }, [dictionaryType])\r\n\r\n  // list of all user inputs(guesses)\r\n  const [guesses, setGuesses] = useState<string[]>([])\r\n\r\n  useEffect(\r\n    function checkCurrentSolutionFromLocalStorage() {\r\n      const loaded = loadGameSolutionAndGuessesFromLocalStorage(dictionaryType)\r\n\r\n      // if we open the game the next day solution will be different\r\n      // so return an empty array\r\n      if (loaded?.solution !== _solution) {\r\n        setGuesses([])\r\n        return resetGame\r\n      }\r\n\r\n      const gameWasWon = Boolean(loaded?.guesses?.includes(_solution))\r\n      setIsGameWon(gameWasWon)\r\n\r\n      if (loaded.guesses.length === 6 && !gameWasWon) {\r\n        setIsGameLost(true)\r\n      }\r\n      // restore previous guesses\r\n      setGuesses(loaded.guesses)\r\n\r\n      return resetGame\r\n    },\r\n    [dictionaryType, _solution]\r\n  )\r\n\r\n  const [stats, setStats] = useState<GameStats>({ ...defaultStats })\r\n\r\n  useEffect(\r\n    function loadGameStats() {\r\n      setStats(loadStats(dictionaryType))\r\n    },\r\n    [dictionaryType]\r\n  )\r\n\r\n  useEffect(\r\n    function reSaveGameStats() {\r\n      saveGameSolutionAndGuessesToLocalStorage(dictionaryType, {\r\n        guesses,\r\n        solution: _solution,\r\n      })\r\n    },\r\n    [guesses, dictionaryType, _solution]\r\n  )\r\n\r\n  useEffect(\r\n    function displayAlertBasedOnState() {\r\n      if (isGameWon) {\r\n        setSuccessAlert(\r\n          WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\r\n        )\r\n        setTimeout(() => {\r\n          setSuccessAlert('')\r\n          openStatsDialog()\r\n        }, ALERT_TIME_MS)\r\n      }\r\n\r\n      if (isGameLost) {\r\n        setTimeout(() => {\r\n          openStatsDialog()\r\n        }, ALERT_TIME_MS)\r\n      }\r\n    },\r\n    [isGameWon, isGameLost, openStatsDialog]\r\n  )\r\n\r\n  const onChar = useCallback(\r\n    function _onChar(value: string) {\r\n      if (currentGuess.length < 5 && guesses.length < 6 && !isGameWon) {\r\n        setCurrentGuess(`${currentGuess}${value}`)\r\n      }\r\n    },\r\n    [currentGuess, guesses, isGameWon, setCurrentGuess]\r\n  )\r\n\r\n  const onDelete = useCallback(\r\n    function _onDelete() {\r\n      setCurrentGuess(currentGuess.slice(0, -1))\r\n    },\r\n    [currentGuess, setCurrentGuess]\r\n  )\r\n\r\n  async function onEnter() {\r\n    if (isGameWon || isGameLost) {\r\n      return\r\n    }\r\n\r\n    if (!(currentGuess.length === 5)) {\r\n      setIsNotEnoughLetters(true)\r\n      return setTimeout(() => {\r\n        setIsNotEnoughLetters(false)\r\n      }, ALERT_TIME_MS)\r\n    }\r\n\r\n    // same word input repeated\r\n    if (guesses.includes(currentGuess)) {\r\n      setSameWordEnteredBefore(true)\r\n      return setTimeout(() => {\r\n        setSameWordEnteredBefore(false)\r\n      }, ALERT_TIME_MS)\r\n    } else if (!(await isWordInWordList(currentGuess, guesses))) {\r\n      setIsWordNotFoundAlertOpen(true)\r\n      return setTimeout(() => {\r\n        setIsWordNotFoundAlertOpen(false)\r\n      }, ALERT_TIME_MS)\r\n    }\r\n\r\n    const winningWord = isWinningWord(currentGuess, _solution)\r\n    let synonymWorlWin = ''\r\n\r\n    if (currentGuess.length === 5 && guesses.length < 6 && !isGameWon) {\r\n      if (!winningWord) {\r\n        let synonyms = genereateSynonymsOfWord(currentGuess)\r\n        for (let synonym of synonyms) {\r\n          let isWining = isWinningWord(synonym, _solution)\r\n          if (isWining) synonymWorlWin = synonym\r\n        }\r\n      }\r\n\r\n      setGuesses([...guesses, synonymWorlWin || currentGuess])\r\n      setCurrentGuess('')\r\n\r\n      if (winningWord || synonymWorlWin) {\r\n        setStats(\r\n          addStatsForCompletedGame(stats, guesses.length, dictionaryType)\r\n        )\r\n        return setIsGameWon(true)\r\n      }\r\n\r\n      if (guesses.length === 5) {\r\n        setStats(\r\n          addStatsForCompletedGame(stats, guesses.length + 1, dictionaryType)\r\n        )\r\n        setIsGameLost(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(function adsObserver() {\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      for (let entry of entries) {\r\n        const width = entry.contentRect.width\r\n        //const height = entry.contentRect.height;\r\n        setScreenWidth(width)\r\n      }\r\n    })\r\n\r\n    resizeObserver.observe(document.body)\r\n  }, [])\r\n\r\n  useEffect(\r\n    function displayAdsLogic() {\r\n      if (isMobile(screenWidth)) {\r\n        setOpenSubscribeAd_Desktop(false)\r\n\r\n        const openedOnStart = localStorage.getItem(ADS_OPENED_ON_STARTUP)\r\n        const openedOnMiddle = localStorage.getItem(ADS_OPENED_ON_MIDDLE)\r\n        const openedOnEnd = localStorage.getItem(ADS_OPENED_ON_END)\r\n        const numberOfGusses = guesses.length\r\n\r\n        if (!openedOnStart && !numberOfGusses) {\r\n          setOpenSubscribeAd_Mobile(true)\r\n          localStorage.setItem(ADS_OPENED_ON_STARTUP, 'true')\r\n        } else if (!openedOnMiddle && numberOfGusses == 3) {\r\n          setOpenSubscribeAd_Mobile(true)\r\n          localStorage.setItem(ADS_OPENED_ON_MIDDLE, 'true')\r\n        } else if (!openedOnEnd && numberOfGusses == 6) {\r\n          setOpenSubscribeAd_Mobile(true)\r\n          localStorage.setItem(ADS_OPENED_ON_END, 'true')\r\n          setTimeout(function removeOnEndAgain() {\r\n            localStorage.removeItem(ADS_OPENED_ON_END)\r\n          }, 2000)\r\n        }\r\n      } else {\r\n        setOpenSubscribeAd_Desktop(true)\r\n        setOpenSubscribeAd_Mobile(false)\r\n      }\r\n    },\r\n    [screenWidth, guesses]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={classnames(`absolute top-20`, {\r\n          hidden: !openSubscribeAd_Mobile,\r\n        })}\r\n        style={{\r\n          right: `${(screenWidth - 326) / 2}px`,\r\n        }}\r\n      >\r\n        <SubscribeAd\r\n          closeHandler={() => {\r\n            setOpenSubscribeAd_Mobile(false)\r\n            setOpenSubscribeAd_Desktop(false)\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        className={classnames('absolute bottom-10 right-4', {\r\n          hidden: !openSubscribeAd_Desktop,\r\n        })}\r\n      >\r\n        <SubscribeAd\r\n          closeHandler={() => {\r\n            setOpenSubscribeAd_Desktop(false)\r\n            setOpenSubscribeAd_Mobile(false)\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        <ChangeDictionaryTabs />\r\n\r\n        <Grid\r\n          solution={_solution}\r\n          guesses={guesses}\r\n          currentGuess={currentGuess}\r\n        />\r\n\r\n        <Keyboard\r\n          onChar={onChar}\r\n          onDelete={onDelete}\r\n          onEnter={onEnter}\r\n          guesses={guesses}\r\n          solution={_solution}\r\n          dicType={dictionaryType}\r\n        />\r\n      </div>\r\n\r\n      <StatsModal\r\n        guesses={guesses}\r\n        gameStats={stats}\r\n        isGameLost={isGameLost}\r\n        isGameWon={isGameWon}\r\n        handleShare={() => {\r\n          setSuccessAlert(GAME_COPIED_MESSAGE)\r\n          return setTimeout(() => setSuccessAlert(''), ALERT_TIME_MS)\r\n        }}\r\n        solution={_solution}\r\n        tomorrow={_tomorrow}\r\n        solutionIndex={_solutionIndex}\r\n      />\r\n      <Alert message={NOT_ENOUGH_LETTERS_MESSAGE} isOpen={isNotEnoughLetters} />\r\n      <Alert\r\n        message={SAME_WORD_ENTERED_BEFORE}\r\n        isOpen={sameWordsEnteredBefore}\r\n      />\r\n      <Alert\r\n        message={WORD_NOT_FOUND_MESSAGE}\r\n        isOpen={isWordNotFoundAlertOpen}\r\n      />\r\n      <Alert message={CORRECT_WORD_MESSAGE(_solution)} isOpen={isGameLost} />\r\n      <Alert\r\n        message={successAlert}\r\n        isOpen={successAlert !== ''}\r\n        variant=\"success\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n"],"names":["Alert","isOpen","message","variant","classes","classNames","show","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","CONFIG","getGuessStatuses","guess","solution","splitSolution","split","splitGuess","solutionCharsTaken","map","_","statuses","Array","from","length","forEach","letter","i","includes","indexOfPresentChar","findIndex","x","index","getDictWords","key","DICTIONARY_ADJACTIVES","DICIONARY_NOUNS","DICTIONARY_NAMES","DICTIONARY_VERBS","DICTIONARY_MEANING","MAIN_DICTIONARY","LETTERS_SYNONYMS","genereateSynonymsOfWord","word","result","synonymGroup","synonymLetterIndex","currentSynonymLetter","synonymsOfLetter","filter","letterLocations","slice","_l","letterLocation","synonymLetter","newWord","originalLetter","join","push","isWordInWordList","guesses","dictionary","meaningDictionary","concat","synonyms","synonymWord","isWinningWord","updateStatusesAccordingToSynonyms","_statuses","acceptedSynonyms","fill","some","_letter","CompletedRow","Cell","value","status","CurrentRow","emptyCells","EmptyRow","Grid","currentGuess","empties","dir","Key","children","width","onClick","extraLetters","classnames","popoverRef","useRef","longPressEvent","onLongPress","delay","shouldPreventDefault","useState","longPressTriggered","setLongPressTriggered","timeout","target","start","useCallback","e","persist","clonedEvent","addEventListener","preventDefault","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","useLongPress","click","event","currentTarget","blur","style","height","position","top","left","open","close","ref","extraLetter","isTouchEvent","touches","Keyboard","onChar","onDelete","onEnter","dicType","charStatuses","charsToStatusMap","generateKeyboardStatuses","listener","code","test","useEffect","window","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fullWidth","ENTER_TEXT","StatItem","label","StatBar","gameStats","TOTAL_TRIES_TEXT","totalGames","SUCCESS_RATE_TEXT","successRate","CURRENT_STREAK_TEXT","currentStreak","BEST_STREAK_TEXT","bestStreak","shareStatus","lost","solutionIndex","text","navigator","clipboard","textArea","document","createElement","body","appendChild","focus","select","msg","execCommand","console","log","err","error","removeChild","fallbackCopyTextToClipboard","writeText","then","copyTextToClipboard","GAME_TITLE","generateEmojiGrid","StatsModal","isGameLost","isGameWon","handleShare","tomorrow","useSelector","state","dialogs","stats","dispatch","useDispatch","handleClose","closeDialog","dialogName","BaseModal","title","STATISTICS_TITLE","NEW_WORD_TEXT","date","daysInHours","type","SHARE_TEXT","addStatsForCompletedGame","count","gamesFailed","winDistribution","Math","round","max","getSuccessRate","localStorage","setItem","JSON","stringify","saveStatsToLocalStorage","defaultStats","loadStats","getItem","parse","loadStatsFromLocalStorage","ChangeDictionaryTabs","_type","to","isActive","whiteSpace","dictionaryTypeTranslater","SubscribeAd","closeHandler","href","rel","src","subscribeImage","alt","ALERT_TIME_MS","ADS_OPENED_ON_STARTUP","ADS_OPENED_ON_MIDDLE","ADS_OPENED_ON_END","WordleGame","dictionaryType","screenWidth","setScreenWidth","openSubscribeAd_Desktop","setOpenSubscribeAd_Desktop","openSubscribeAd_Mobile","setOpenSubscribeAd_Mobile","setCurrentGuess","setIsGameWon","setIsGameLost","sameWordsEnteredBefore","setSameWordEnteredBefore","isNotEnoughLetters","setIsNotEnoughLetters","isWordNotFoundAlertOpen","setIsWordNotFoundAlertOpen","successAlert","setSuccessAlert","openStatsDialog","openDialog","resetGame","useMemo","dictType","epochMs","Date","valueOf","now","msInDay","floor","nextday","toUpperCase","getWordOfDay","_solution","_solutionIndex","_tomorrow","setGuesses","loaded","loadGameSolutionAndGuessesFromLocalStorage","gameWasWon","Boolean","setStats","gameState","WIN_MESSAGES","random","winningWord","synonymWorlWin","synonym","ResizeObserver","entries","contentRect","observe","openedOnStart","openedOnMiddle","openedOnEnd","numberOfGusses","removeItem","hidden","right","GAME_COPIED_MESSAGE","NOT_ENOUGH_LETTERS_MESSAGE","SAME_WORD_ENTERED_BEFORE","WORD_NOT_FOUND_MESSAGE","CORRECT_WORD_MESSAGE"],"sourceRoot":""}